name: Java Release

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: 'Version being released'
        required: true
      branch:
        description: 'Branch to release from'
        required: true
        default: 'main'

jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          check-latest: true
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          gpg-passphrase: MAVEN_GPG_SECRET_KEY_PASSWORD
      - id: install-secret-key
        name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
      - name: Compile
        env:
          OFFLINE_TOKEN: ${{ secrets.OFFLINE_TOKEN }}
        working-directory: app-services-sdk-java
        run: mvn clean install
      - name: Set git identity
        run: |
          git config user.name ci-bot
          git config user.email ci-bot@andreatp.io
      - name: Release the new version
        working-directory: app-services-sdk-java
        run: |
          mvn versions:set -DgenerateBackupPoms=false -DnewVersion=${{ github.event.inputs.release-version }}
          git checkout -b release-${{ github.event.inputs.release-version }}
          git add .
          git commit -m "Release version update ${{ github.event.inputs.release-version }}"
          git push origin release-${{ github.event.inputs.release-version }}
          git tag ${{ github.event.inputs.release-version }}
          git push origin ${{ github.event.inputs.release-version }}
      - name: Publish
        working-directory: app-services-sdk-java
        run : mvn --batch-mode clean deploy -Prelease -DskipTests=true -X
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_SECRET_KEY_PASSWORD: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
      - name: Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v1
        with:
          tag_name: ${{ github.event.inputs.release-version }}
