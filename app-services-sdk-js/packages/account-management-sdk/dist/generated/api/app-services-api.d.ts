/**
 * Account Management Service API
 * Manage user subscriptions and clusters
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { AccessTokenCfg } from '../model';
import { Account } from '../model';
import { QuotaCostList } from '../model';
import { SelfTermsReview } from '../model';
import { TermsReviewResponse } from '../model';
/**
 * AppServicesApi - axios parameter creator
 * @export
 */
export declare const AppServicesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Return access token generated from registries in docker format
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAccountsMgmtV1AccessTokenPost: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get the authenticated account
     * @param {boolean} [fetchLabels] If true, includes the labels on a subscription/organization/account in the output. Could slow request response time.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAccountsMgmtV1CurrentAccountGet: (fetchLabels?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Returns a summary of quota cost
     * @param {string} orgId The id of organization
     * @param {string} [search] Specifies the search criteria. The syntax of this parameter is similar to the syntax of the _where_ clause of an SQL statement, using the names of the json attributes / column names of the account. For example, in order to retrieve all the accounts with a username starting with &#x60;my&#x60;:  &#x60;&#x60;&#x60;sql username like \&#39;my%\&#39; &#x60;&#x60;&#x60;  The search criteria can also be applied on related resource. For example, in order to retrieve all the subscriptions labeled by &#x60;foo&#x3D;bar&#x60;,  &#x60;&#x60;&#x60;sql labels.key &#x3D; \&#39;foo\&#39; and labels.value &#x3D; \&#39;bar\&#39; &#x60;&#x60;&#x60;  If the parameter isn\&#39;t provided, or if the value is empty, then all the accounts that the user has permission to see will be returned.
     * @param {boolean} [fetchRelatedResources] If true, includes the related resources in the output. Could slow request response time.
     * @param {boolean} [forceRecalc] If true, includes that ConsumedQuota should be recalculated.
     * @param {boolean} [fetchCloudAccounts] If true, includes the marketplace cloud accounts in the output. Could slow request response time.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet: (orgId: string, search?: string, fetchRelatedResources?: boolean, forceRecalc?: boolean, fetchCloudAccounts?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Review your status of Terms
     * @param {SelfTermsReview} selfTermsReview Data to check self terms for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthorizationsV1SelfTermsReviewPost: (selfTermsReview: SelfTermsReview, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AppServicesApi - functional programming interface
 * @export
 */
export declare const AppServicesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Return access token generated from registries in docker format
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAccountsMgmtV1AccessTokenPost(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AccessTokenCfg>>;
    /**
     *
     * @summary Get the authenticated account
     * @param {boolean} [fetchLabels] If true, includes the labels on a subscription/organization/account in the output. Could slow request response time.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAccountsMgmtV1CurrentAccountGet(fetchLabels?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Account>>;
    /**
     *
     * @summary Returns a summary of quota cost
     * @param {string} orgId The id of organization
     * @param {string} [search] Specifies the search criteria. The syntax of this parameter is similar to the syntax of the _where_ clause of an SQL statement, using the names of the json attributes / column names of the account. For example, in order to retrieve all the accounts with a username starting with &#x60;my&#x60;:  &#x60;&#x60;&#x60;sql username like \&#39;my%\&#39; &#x60;&#x60;&#x60;  The search criteria can also be applied on related resource. For example, in order to retrieve all the subscriptions labeled by &#x60;foo&#x3D;bar&#x60;,  &#x60;&#x60;&#x60;sql labels.key &#x3D; \&#39;foo\&#39; and labels.value &#x3D; \&#39;bar\&#39; &#x60;&#x60;&#x60;  If the parameter isn\&#39;t provided, or if the value is empty, then all the accounts that the user has permission to see will be returned.
     * @param {boolean} [fetchRelatedResources] If true, includes the related resources in the output. Could slow request response time.
     * @param {boolean} [forceRecalc] If true, includes that ConsumedQuota should be recalculated.
     * @param {boolean} [fetchCloudAccounts] If true, includes the marketplace cloud accounts in the output. Could slow request response time.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(orgId: string, search?: string, fetchRelatedResources?: boolean, forceRecalc?: boolean, fetchCloudAccounts?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QuotaCostList>>;
    /**
     *
     * @summary Review your status of Terms
     * @param {SelfTermsReview} selfTermsReview Data to check self terms for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthorizationsV1SelfTermsReviewPost(selfTermsReview: SelfTermsReview, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TermsReviewResponse>>;
};
/**
 * AppServicesApi - factory interface
 * @export
 */
export declare const AppServicesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Return access token generated from registries in docker format
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAccountsMgmtV1AccessTokenPost(options?: any): AxiosPromise<AccessTokenCfg>;
    /**
     *
     * @summary Get the authenticated account
     * @param {boolean} [fetchLabels] If true, includes the labels on a subscription/organization/account in the output. Could slow request response time.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAccountsMgmtV1CurrentAccountGet(fetchLabels?: boolean, options?: any): AxiosPromise<Account>;
    /**
     *
     * @summary Returns a summary of quota cost
     * @param {string} orgId The id of organization
     * @param {string} [search] Specifies the search criteria. The syntax of this parameter is similar to the syntax of the _where_ clause of an SQL statement, using the names of the json attributes / column names of the account. For example, in order to retrieve all the accounts with a username starting with &#x60;my&#x60;:  &#x60;&#x60;&#x60;sql username like \&#39;my%\&#39; &#x60;&#x60;&#x60;  The search criteria can also be applied on related resource. For example, in order to retrieve all the subscriptions labeled by &#x60;foo&#x3D;bar&#x60;,  &#x60;&#x60;&#x60;sql labels.key &#x3D; \&#39;foo\&#39; and labels.value &#x3D; \&#39;bar\&#39; &#x60;&#x60;&#x60;  If the parameter isn\&#39;t provided, or if the value is empty, then all the accounts that the user has permission to see will be returned.
     * @param {boolean} [fetchRelatedResources] If true, includes the related resources in the output. Could slow request response time.
     * @param {boolean} [forceRecalc] If true, includes that ConsumedQuota should be recalculated.
     * @param {boolean} [fetchCloudAccounts] If true, includes the marketplace cloud accounts in the output. Could slow request response time.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(orgId: string, search?: string, fetchRelatedResources?: boolean, forceRecalc?: boolean, fetchCloudAccounts?: boolean, options?: any): AxiosPromise<QuotaCostList>;
    /**
     *
     * @summary Review your status of Terms
     * @param {SelfTermsReview} selfTermsReview Data to check self terms for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiAuthorizationsV1SelfTermsReviewPost(selfTermsReview: SelfTermsReview, options?: any): AxiosPromise<TermsReviewResponse>;
};
/**
 * AppServicesApi - interface
 * @export
 * @interface AppServicesApi
 */
export interface AppServicesApiInterface {
    /**
     *
     * @summary Return access token generated from registries in docker format
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppServicesApiInterface
     */
    apiAccountsMgmtV1AccessTokenPost(options?: AxiosRequestConfig): AxiosPromise<AccessTokenCfg>;
    /**
     *
     * @summary Get the authenticated account
     * @param {boolean} [fetchLabels] If true, includes the labels on a subscription/organization/account in the output. Could slow request response time.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppServicesApiInterface
     */
    apiAccountsMgmtV1CurrentAccountGet(fetchLabels?: boolean, options?: AxiosRequestConfig): AxiosPromise<Account>;
    /**
     *
     * @summary Returns a summary of quota cost
     * @param {string} orgId The id of organization
     * @param {string} [search] Specifies the search criteria. The syntax of this parameter is similar to the syntax of the _where_ clause of an SQL statement, using the names of the json attributes / column names of the account. For example, in order to retrieve all the accounts with a username starting with &#x60;my&#x60;:  &#x60;&#x60;&#x60;sql username like \&#39;my%\&#39; &#x60;&#x60;&#x60;  The search criteria can also be applied on related resource. For example, in order to retrieve all the subscriptions labeled by &#x60;foo&#x3D;bar&#x60;,  &#x60;&#x60;&#x60;sql labels.key &#x3D; \&#39;foo\&#39; and labels.value &#x3D; \&#39;bar\&#39; &#x60;&#x60;&#x60;  If the parameter isn\&#39;t provided, or if the value is empty, then all the accounts that the user has permission to see will be returned.
     * @param {boolean} [fetchRelatedResources] If true, includes the related resources in the output. Could slow request response time.
     * @param {boolean} [forceRecalc] If true, includes that ConsumedQuota should be recalculated.
     * @param {boolean} [fetchCloudAccounts] If true, includes the marketplace cloud accounts in the output. Could slow request response time.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppServicesApiInterface
     */
    apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(orgId: string, search?: string, fetchRelatedResources?: boolean, forceRecalc?: boolean, fetchCloudAccounts?: boolean, options?: AxiosRequestConfig): AxiosPromise<QuotaCostList>;
    /**
     *
     * @summary Review your status of Terms
     * @param {SelfTermsReview} selfTermsReview Data to check self terms for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppServicesApiInterface
     */
    apiAuthorizationsV1SelfTermsReviewPost(selfTermsReview: SelfTermsReview, options?: AxiosRequestConfig): AxiosPromise<TermsReviewResponse>;
}
/**
 * AppServicesApi - object-oriented interface
 * @export
 * @class AppServicesApi
 * @extends {BaseAPI}
 */
export declare class AppServicesApi extends BaseAPI implements AppServicesApiInterface {
    /**
     *
     * @summary Return access token generated from registries in docker format
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppServicesApi
     */
    apiAccountsMgmtV1AccessTokenPost(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AccessTokenCfg, any>>;
    /**
     *
     * @summary Get the authenticated account
     * @param {boolean} [fetchLabels] If true, includes the labels on a subscription/organization/account in the output. Could slow request response time.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppServicesApi
     */
    apiAccountsMgmtV1CurrentAccountGet(fetchLabels?: boolean, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Account, any>>;
    /**
     *
     * @summary Returns a summary of quota cost
     * @param {string} orgId The id of organization
     * @param {string} [search] Specifies the search criteria. The syntax of this parameter is similar to the syntax of the _where_ clause of an SQL statement, using the names of the json attributes / column names of the account. For example, in order to retrieve all the accounts with a username starting with &#x60;my&#x60;:  &#x60;&#x60;&#x60;sql username like \&#39;my%\&#39; &#x60;&#x60;&#x60;  The search criteria can also be applied on related resource. For example, in order to retrieve all the subscriptions labeled by &#x60;foo&#x3D;bar&#x60;,  &#x60;&#x60;&#x60;sql labels.key &#x3D; \&#39;foo\&#39; and labels.value &#x3D; \&#39;bar\&#39; &#x60;&#x60;&#x60;  If the parameter isn\&#39;t provided, or if the value is empty, then all the accounts that the user has permission to see will be returned.
     * @param {boolean} [fetchRelatedResources] If true, includes the related resources in the output. Could slow request response time.
     * @param {boolean} [forceRecalc] If true, includes that ConsumedQuota should be recalculated.
     * @param {boolean} [fetchCloudAccounts] If true, includes the marketplace cloud accounts in the output. Could slow request response time.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppServicesApi
     */
    apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(orgId: string, search?: string, fetchRelatedResources?: boolean, forceRecalc?: boolean, fetchCloudAccounts?: boolean, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<QuotaCostList, any>>;
    /**
     *
     * @summary Review your status of Terms
     * @param {SelfTermsReview} selfTermsReview Data to check self terms for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppServicesApi
     */
    apiAuthorizationsV1SelfTermsReviewPost(selfTermsReview: SelfTermsReview, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TermsReviewResponse, any>>;
}
