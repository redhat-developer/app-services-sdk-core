/**
 * Kafka Management API
 * Kafka Management API is a REST API to manage Kafka instances
 *
 * The version of the OpenAPI document: 1.15.0
 * Contact: rhosak-support@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { EnterpriseCluster } from '../model';
import { EnterpriseClusterList } from '../model';
import { EnterpriseClusterWithAddonParameters } from '../model';
import { EnterpriseOsdClusterPayload } from '../model';
/**
 * EnterpriseDataplaneClustersApi - axios parameter creator
 * @export
 */
export declare const EnterpriseDataplaneClustersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {boolean} async Perform the action in an asynchronous manner
     * @param {string} id ID of the enterprise data plane cluster
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteEnterpriseClusterById: (async: boolean, id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns enterprise data plane cluster by ID
     * @param {string} id ID of the enterprise data plane cluster
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEnterpriseClusterById: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns enterprise data plane cluster by ID along with its addon parameters
     * @param {string} id ID of the enterprise data plane cluster
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEnterpriseClusterWithAddonParameters: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List all Enterprise data plane clusters
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEnterpriseOsdClusters: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Register enterprise data plane cluster
     * @param {EnterpriseOsdClusterPayload} enterpriseOsdClusterPayload Enterprise data plane cluster details
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerEnterpriseOsdCluster: (enterpriseOsdClusterPayload: EnterpriseOsdClusterPayload, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * EnterpriseDataplaneClustersApi - functional programming interface
 * @export
 */
export declare const EnterpriseDataplaneClustersApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {boolean} async Perform the action in an asynchronous manner
     * @param {string} id ID of the enterprise data plane cluster
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteEnterpriseClusterById(async: boolean, id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Error>>;
    /**
     * Returns enterprise data plane cluster by ID
     * @param {string} id ID of the enterprise data plane cluster
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEnterpriseClusterById(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EnterpriseCluster>>;
    /**
     * Returns enterprise data plane cluster by ID along with its addon parameters
     * @param {string} id ID of the enterprise data plane cluster
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEnterpriseClusterWithAddonParameters(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EnterpriseClusterWithAddonParameters>>;
    /**
     * List all Enterprise data plane clusters
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEnterpriseOsdClusters(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EnterpriseClusterList>>;
    /**
     * Register enterprise data plane cluster
     * @param {EnterpriseOsdClusterPayload} enterpriseOsdClusterPayload Enterprise data plane cluster details
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerEnterpriseOsdCluster(enterpriseOsdClusterPayload: EnterpriseOsdClusterPayload, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EnterpriseClusterWithAddonParameters>>;
};
/**
 * EnterpriseDataplaneClustersApi - factory interface
 * @export
 */
export declare const EnterpriseDataplaneClustersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {boolean} async Perform the action in an asynchronous manner
     * @param {string} id ID of the enterprise data plane cluster
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteEnterpriseClusterById(async: boolean, id: string, options?: any): AxiosPromise<Error>;
    /**
     * Returns enterprise data plane cluster by ID
     * @param {string} id ID of the enterprise data plane cluster
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEnterpriseClusterById(id: string, options?: any): AxiosPromise<EnterpriseCluster>;
    /**
     * Returns enterprise data plane cluster by ID along with its addon parameters
     * @param {string} id ID of the enterprise data plane cluster
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEnterpriseClusterWithAddonParameters(id: string, options?: any): AxiosPromise<EnterpriseClusterWithAddonParameters>;
    /**
     * List all Enterprise data plane clusters
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEnterpriseOsdClusters(options?: any): AxiosPromise<EnterpriseClusterList>;
    /**
     * Register enterprise data plane cluster
     * @param {EnterpriseOsdClusterPayload} enterpriseOsdClusterPayload Enterprise data plane cluster details
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerEnterpriseOsdCluster(enterpriseOsdClusterPayload: EnterpriseOsdClusterPayload, options?: any): AxiosPromise<EnterpriseClusterWithAddonParameters>;
};
/**
 * EnterpriseDataplaneClustersApi - interface
 * @export
 * @interface EnterpriseDataplaneClustersApi
 */
export interface EnterpriseDataplaneClustersApiInterface {
    /**
     *
     * @param {boolean} async Perform the action in an asynchronous manner
     * @param {string} id ID of the enterprise data plane cluster
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseDataplaneClustersApiInterface
     */
    deleteEnterpriseClusterById(async: boolean, id: string, options?: AxiosRequestConfig): AxiosPromise<Error>;
    /**
     * Returns enterprise data plane cluster by ID
     * @param {string} id ID of the enterprise data plane cluster
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseDataplaneClustersApiInterface
     */
    getEnterpriseClusterById(id: string, options?: AxiosRequestConfig): AxiosPromise<EnterpriseCluster>;
    /**
     * Returns enterprise data plane cluster by ID along with its addon parameters
     * @param {string} id ID of the enterprise data plane cluster
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseDataplaneClustersApiInterface
     */
    getEnterpriseClusterWithAddonParameters(id: string, options?: AxiosRequestConfig): AxiosPromise<EnterpriseClusterWithAddonParameters>;
    /**
     * List all Enterprise data plane clusters
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseDataplaneClustersApiInterface
     */
    getEnterpriseOsdClusters(options?: AxiosRequestConfig): AxiosPromise<EnterpriseClusterList>;
    /**
     * Register enterprise data plane cluster
     * @param {EnterpriseOsdClusterPayload} enterpriseOsdClusterPayload Enterprise data plane cluster details
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseDataplaneClustersApiInterface
     */
    registerEnterpriseOsdCluster(enterpriseOsdClusterPayload: EnterpriseOsdClusterPayload, options?: AxiosRequestConfig): AxiosPromise<EnterpriseClusterWithAddonParameters>;
}
/**
 * EnterpriseDataplaneClustersApi - object-oriented interface
 * @export
 * @class EnterpriseDataplaneClustersApi
 * @extends {BaseAPI}
 */
export declare class EnterpriseDataplaneClustersApi extends BaseAPI implements EnterpriseDataplaneClustersApiInterface {
    /**
     *
     * @param {boolean} async Perform the action in an asynchronous manner
     * @param {string} id ID of the enterprise data plane cluster
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseDataplaneClustersApi
     */
    deleteEnterpriseClusterById(async: boolean, id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Error, any>>;
    /**
     * Returns enterprise data plane cluster by ID
     * @param {string} id ID of the enterprise data plane cluster
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseDataplaneClustersApi
     */
    getEnterpriseClusterById(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<EnterpriseCluster, any>>;
    /**
     * Returns enterprise data plane cluster by ID along with its addon parameters
     * @param {string} id ID of the enterprise data plane cluster
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseDataplaneClustersApi
     */
    getEnterpriseClusterWithAddonParameters(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<EnterpriseClusterWithAddonParameters, any>>;
    /**
     * List all Enterprise data plane clusters
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseDataplaneClustersApi
     */
    getEnterpriseOsdClusters(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<EnterpriseClusterList, any>>;
    /**
     * Register enterprise data plane cluster
     * @param {EnterpriseOsdClusterPayload} enterpriseOsdClusterPayload Enterprise data plane cluster details
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseDataplaneClustersApi
     */
    registerEnterpriseOsdCluster(enterpriseOsdClusterPayload: EnterpriseOsdClusterPayload, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<EnterpriseClusterWithAddonParameters, any>>;
}
