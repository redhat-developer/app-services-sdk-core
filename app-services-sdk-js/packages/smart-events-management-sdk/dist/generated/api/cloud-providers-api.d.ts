/**
 * Red Hat Openshift SmartEvents Fleet Manager V2
 * The API exposed by the fleet manager of the SmartEvents service.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: openbridge-dev@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { CloudProviderListResponse } from '../model';
import { CloudRegionListResponse } from '../model';
/**
 * CloudProvidersApi - axios parameter creator
 * @export
 */
export declare const CloudProvidersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get details of the Cloud Provider specified by id.
     * @summary Get Cloud Provider.
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCloudProvider: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the list of supported Regions of the specified Cloud Provider.
     * @summary List Supported Cloud Regions.
     * @param {string} id
     * @param {number} [page]
     * @param {number} [size]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCloudProviderRegions: (id: string, page?: number, size?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the list of supported Cloud Providers.
     * @summary List Supported Cloud Providers.
     * @param {number} [page]
     * @param {number} [size]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCloudProviders: (page?: number, size?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CloudProvidersApi - functional programming interface
 * @export
 */
export declare const CloudProvidersApiFp: (configuration?: Configuration) => {
    /**
     * Get details of the Cloud Provider specified by id.
     * @summary Get Cloud Provider.
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCloudProvider(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CloudProviderListResponse>>;
    /**
     * Returns the list of supported Regions of the specified Cloud Provider.
     * @summary List Supported Cloud Regions.
     * @param {string} id
     * @param {number} [page]
     * @param {number} [size]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCloudProviderRegions(id: string, page?: number, size?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CloudRegionListResponse>>;
    /**
     * Returns the list of supported Cloud Providers.
     * @summary List Supported Cloud Providers.
     * @param {number} [page]
     * @param {number} [size]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCloudProviders(page?: number, size?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CloudProviderListResponse>>;
};
/**
 * CloudProvidersApi - factory interface
 * @export
 */
export declare const CloudProvidersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get details of the Cloud Provider specified by id.
     * @summary Get Cloud Provider.
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCloudProvider(id: string, options?: any): AxiosPromise<CloudProviderListResponse>;
    /**
     * Returns the list of supported Regions of the specified Cloud Provider.
     * @summary List Supported Cloud Regions.
     * @param {string} id
     * @param {number} [page]
     * @param {number} [size]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCloudProviderRegions(id: string, page?: number, size?: number, options?: any): AxiosPromise<CloudRegionListResponse>;
    /**
     * Returns the list of supported Cloud Providers.
     * @summary List Supported Cloud Providers.
     * @param {number} [page]
     * @param {number} [size]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCloudProviders(page?: number, size?: number, options?: any): AxiosPromise<CloudProviderListResponse>;
};
/**
 * CloudProvidersApi - interface
 * @export
 * @interface CloudProvidersApi
 */
export interface CloudProvidersApiInterface {
    /**
     * Get details of the Cloud Provider specified by id.
     * @summary Get Cloud Provider.
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CloudProvidersApiInterface
     */
    getCloudProvider(id: string, options?: AxiosRequestConfig): AxiosPromise<CloudProviderListResponse>;
    /**
     * Returns the list of supported Regions of the specified Cloud Provider.
     * @summary List Supported Cloud Regions.
     * @param {string} id
     * @param {number} [page]
     * @param {number} [size]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CloudProvidersApiInterface
     */
    listCloudProviderRegions(id: string, page?: number, size?: number, options?: AxiosRequestConfig): AxiosPromise<CloudRegionListResponse>;
    /**
     * Returns the list of supported Cloud Providers.
     * @summary List Supported Cloud Providers.
     * @param {number} [page]
     * @param {number} [size]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CloudProvidersApiInterface
     */
    listCloudProviders(page?: number, size?: number, options?: AxiosRequestConfig): AxiosPromise<CloudProviderListResponse>;
}
/**
 * CloudProvidersApi - object-oriented interface
 * @export
 * @class CloudProvidersApi
 * @extends {BaseAPI}
 */
export declare class CloudProvidersApi extends BaseAPI implements CloudProvidersApiInterface {
    /**
     * Get details of the Cloud Provider specified by id.
     * @summary Get Cloud Provider.
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CloudProvidersApi
     */
    getCloudProvider(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CloudProviderListResponse, any>>;
    /**
     * Returns the list of supported Regions of the specified Cloud Provider.
     * @summary List Supported Cloud Regions.
     * @param {string} id
     * @param {number} [page]
     * @param {number} [size]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CloudProvidersApi
     */
    listCloudProviderRegions(id: string, page?: number, size?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CloudRegionListResponse, any>>;
    /**
     * Returns the list of supported Cloud Providers.
     * @summary List Supported Cloud Providers.
     * @param {number} [page]
     * @param {number} [size]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CloudProvidersApi
     */
    listCloudProviders(page?: number, size?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CloudProviderListResponse, any>>;
}
