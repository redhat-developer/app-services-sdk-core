/*
sso.redhat.com API documentation

This is the API documentation for sso.redhat.com

API version: 5.0.19-SNAPSHOT
Contact: it-user-team-list@redhat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serviceaccountsclient

import (
	"encoding/json"
)

// checks if the AuthenticationFactors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationFactors{}

// AuthenticationFactors struct for AuthenticationFactors
type AuthenticationFactors struct {
	Otp *Otp `json:"otp,omitempty"`
}

// NewAuthenticationFactors instantiates a new AuthenticationFactors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationFactors() *AuthenticationFactors {
	this := AuthenticationFactors{}
	return &this
}

// NewAuthenticationFactorsWithDefaults instantiates a new AuthenticationFactors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationFactorsWithDefaults() *AuthenticationFactors {
	this := AuthenticationFactors{}
	return &this
}

// GetOtp returns the Otp field value if set, zero value otherwise.
func (o *AuthenticationFactors) GetOtp() Otp {
	if o == nil || IsNil(o.Otp) {
		var ret Otp
		return ret
	}
	return *o.Otp
}

// GetOtpOk returns a tuple with the Otp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationFactors) GetOtpOk() (*Otp, bool) {
	if o == nil || IsNil(o.Otp) {
		return nil, false
	}
	return o.Otp, true
}

// HasOtp returns a boolean if a field has been set.
func (o *AuthenticationFactors) HasOtp() bool {
	if o != nil && !IsNil(o.Otp) {
		return true
	}

	return false
}

// SetOtp gets a reference to the given Otp and assigns it to the Otp field.
func (o *AuthenticationFactors) SetOtp(v Otp) {
	o.Otp = &v
}

func (o AuthenticationFactors) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationFactors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Otp) {
		toSerialize["otp"] = o.Otp
	}
	return toSerialize, nil
}

type NullableAuthenticationFactors struct {
	value *AuthenticationFactors
	isSet bool
}

func (v NullableAuthenticationFactors) Get() *AuthenticationFactors {
	return v.value
}

func (v *NullableAuthenticationFactors) Set(val *AuthenticationFactors) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationFactors) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationFactors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationFactors(val *AuthenticationFactors) *NullableAuthenticationFactors {
	return &NullableAuthenticationFactors{value: val, isSet: true}
}

func (v NullableAuthenticationFactors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationFactors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


