/*
Account Management Service API

Manage user subscriptions and clusters

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmgmtclient

import (
	"encoding/json"
	"time"
)

// checks if the DeletedSubscriptionAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeletedSubscriptionAllOf{}

// DeletedSubscriptionAllOf struct for DeletedSubscriptionAllOf
type DeletedSubscriptionAllOf struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Id *string `json:"id,omitempty"`
	Metrics *string `json:"metrics,omitempty"`
	QueryTimestamp *time.Time `json:"query_timestamp,omitempty"`
}

// NewDeletedSubscriptionAllOf instantiates a new DeletedSubscriptionAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeletedSubscriptionAllOf() *DeletedSubscriptionAllOf {
	this := DeletedSubscriptionAllOf{}
	return &this
}

// NewDeletedSubscriptionAllOfWithDefaults instantiates a new DeletedSubscriptionAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeletedSubscriptionAllOfWithDefaults() *DeletedSubscriptionAllOf {
	this := DeletedSubscriptionAllOf{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DeletedSubscriptionAllOf) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletedSubscriptionAllOf) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DeletedSubscriptionAllOf) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *DeletedSubscriptionAllOf) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DeletedSubscriptionAllOf) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletedSubscriptionAllOf) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DeletedSubscriptionAllOf) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DeletedSubscriptionAllOf) SetId(v string) {
	o.Id = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *DeletedSubscriptionAllOf) GetMetrics() string {
	if o == nil || IsNil(o.Metrics) {
		var ret string
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletedSubscriptionAllOf) GetMetricsOk() (*string, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *DeletedSubscriptionAllOf) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given string and assigns it to the Metrics field.
func (o *DeletedSubscriptionAllOf) SetMetrics(v string) {
	o.Metrics = &v
}

// GetQueryTimestamp returns the QueryTimestamp field value if set, zero value otherwise.
func (o *DeletedSubscriptionAllOf) GetQueryTimestamp() time.Time {
	if o == nil || IsNil(o.QueryTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.QueryTimestamp
}

// GetQueryTimestampOk returns a tuple with the QueryTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletedSubscriptionAllOf) GetQueryTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.QueryTimestamp) {
		return nil, false
	}
	return o.QueryTimestamp, true
}

// HasQueryTimestamp returns a boolean if a field has been set.
func (o *DeletedSubscriptionAllOf) HasQueryTimestamp() bool {
	if o != nil && !IsNil(o.QueryTimestamp) {
		return true
	}

	return false
}

// SetQueryTimestamp gets a reference to the given time.Time and assigns it to the QueryTimestamp field.
func (o *DeletedSubscriptionAllOf) SetQueryTimestamp(v time.Time) {
	o.QueryTimestamp = &v
}

func (o DeletedSubscriptionAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeletedSubscriptionAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	if !IsNil(o.QueryTimestamp) {
		toSerialize["query_timestamp"] = o.QueryTimestamp
	}
	return toSerialize, nil
}

type NullableDeletedSubscriptionAllOf struct {
	value *DeletedSubscriptionAllOf
	isSet bool
}

func (v NullableDeletedSubscriptionAllOf) Get() *DeletedSubscriptionAllOf {
	return v.value
}

func (v *NullableDeletedSubscriptionAllOf) Set(val *DeletedSubscriptionAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDeletedSubscriptionAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDeletedSubscriptionAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeletedSubscriptionAllOf(val *DeletedSubscriptionAllOf) *NullableDeletedSubscriptionAllOf {
	return &NullableDeletedSubscriptionAllOf{value: val, isSet: true}
}

func (v NullableDeletedSubscriptionAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeletedSubscriptionAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


