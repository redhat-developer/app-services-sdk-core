/*
Account Management Service API

Manage user subscriptions and clusters

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmgmtclient

import (
	"encoding/json"
)

// checks if the QuotaCost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuotaCost{}

// QuotaCost struct for QuotaCost
type QuotaCost struct {
	Href *string `json:"href,omitempty"`
	Id *string `json:"id,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Allowed int32 `json:"allowed"`
	CloudAccounts []CloudAccount `json:"cloud_accounts,omitempty"`
	Consumed int32 `json:"consumed"`
	OrganizationId *string `json:"organization_id,omitempty"`
	QuotaId string `json:"quota_id"`
	RelatedResources []RelatedResource `json:"related_resources,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewQuotaCost instantiates a new QuotaCost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaCost(allowed int32, consumed int32, quotaId string) *QuotaCost {
	this := QuotaCost{}
	this.Allowed = allowed
	this.Consumed = consumed
	this.QuotaId = quotaId
	return &this
}

// NewQuotaCostWithDefaults instantiates a new QuotaCost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaCostWithDefaults() *QuotaCost {
	this := QuotaCost{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *QuotaCost) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaCost) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *QuotaCost) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *QuotaCost) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QuotaCost) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaCost) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QuotaCost) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *QuotaCost) SetId(v string) {
	o.Id = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *QuotaCost) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaCost) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *QuotaCost) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *QuotaCost) SetKind(v string) {
	o.Kind = &v
}

// GetAllowed returns the Allowed field value
func (o *QuotaCost) GetAllowed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Allowed
}

// GetAllowedOk returns a tuple with the Allowed field value
// and a boolean to check if the value has been set.
func (o *QuotaCost) GetAllowedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Allowed, true
}

// SetAllowed sets field value
func (o *QuotaCost) SetAllowed(v int32) {
	o.Allowed = v
}

// GetCloudAccounts returns the CloudAccounts field value if set, zero value otherwise.
func (o *QuotaCost) GetCloudAccounts() []CloudAccount {
	if o == nil || IsNil(o.CloudAccounts) {
		var ret []CloudAccount
		return ret
	}
	return o.CloudAccounts
}

// GetCloudAccountsOk returns a tuple with the CloudAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaCost) GetCloudAccountsOk() ([]CloudAccount, bool) {
	if o == nil || IsNil(o.CloudAccounts) {
		return nil, false
	}
	return o.CloudAccounts, true
}

// HasCloudAccounts returns a boolean if a field has been set.
func (o *QuotaCost) HasCloudAccounts() bool {
	if o != nil && !IsNil(o.CloudAccounts) {
		return true
	}

	return false
}

// SetCloudAccounts gets a reference to the given []CloudAccount and assigns it to the CloudAccounts field.
func (o *QuotaCost) SetCloudAccounts(v []CloudAccount) {
	o.CloudAccounts = v
}

// GetConsumed returns the Consumed field value
func (o *QuotaCost) GetConsumed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Consumed
}

// GetConsumedOk returns a tuple with the Consumed field value
// and a boolean to check if the value has been set.
func (o *QuotaCost) GetConsumedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Consumed, true
}

// SetConsumed sets field value
func (o *QuotaCost) SetConsumed(v int32) {
	o.Consumed = v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *QuotaCost) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaCost) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *QuotaCost) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *QuotaCost) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetQuotaId returns the QuotaId field value
func (o *QuotaCost) GetQuotaId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuotaId
}

// GetQuotaIdOk returns a tuple with the QuotaId field value
// and a boolean to check if the value has been set.
func (o *QuotaCost) GetQuotaIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuotaId, true
}

// SetQuotaId sets field value
func (o *QuotaCost) SetQuotaId(v string) {
	o.QuotaId = v
}

// GetRelatedResources returns the RelatedResources field value if set, zero value otherwise.
func (o *QuotaCost) GetRelatedResources() []RelatedResource {
	if o == nil || IsNil(o.RelatedResources) {
		var ret []RelatedResource
		return ret
	}
	return o.RelatedResources
}

// GetRelatedResourcesOk returns a tuple with the RelatedResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaCost) GetRelatedResourcesOk() ([]RelatedResource, bool) {
	if o == nil || IsNil(o.RelatedResources) {
		return nil, false
	}
	return o.RelatedResources, true
}

// HasRelatedResources returns a boolean if a field has been set.
func (o *QuotaCost) HasRelatedResources() bool {
	if o != nil && !IsNil(o.RelatedResources) {
		return true
	}

	return false
}

// SetRelatedResources gets a reference to the given []RelatedResource and assigns it to the RelatedResources field.
func (o *QuotaCost) SetRelatedResources(v []RelatedResource) {
	o.RelatedResources = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *QuotaCost) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaCost) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *QuotaCost) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *QuotaCost) SetVersion(v string) {
	o.Version = &v
}

func (o QuotaCost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuotaCost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	toSerialize["allowed"] = o.Allowed
	if !IsNil(o.CloudAccounts) {
		toSerialize["cloud_accounts"] = o.CloudAccounts
	}
	toSerialize["consumed"] = o.Consumed
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	toSerialize["quota_id"] = o.QuotaId
	if !IsNil(o.RelatedResources) {
		toSerialize["related_resources"] = o.RelatedResources
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableQuotaCost struct {
	value *QuotaCost
	isSet bool
}

func (v NullableQuotaCost) Get() *QuotaCost {
	return v.value
}

func (v *NullableQuotaCost) Set(val *QuotaCost) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaCost) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaCost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaCost(val *QuotaCost) *NullableQuotaCost {
	return &NullableQuotaCost{value: val, isSet: true}
}

func (v NullableQuotaCost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaCost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


