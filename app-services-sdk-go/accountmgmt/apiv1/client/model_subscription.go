/*
Account Management Service API

Manage user subscriptions and clusters

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmgmtclient

import (
	"encoding/json"
	"time"
)

// checks if the Subscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Subscription{}

// Subscription struct for Subscription
type Subscription struct {
	Href *string `json:"href,omitempty"`
	Id *string `json:"id,omitempty"`
	Kind *string `json:"kind,omitempty"`
	// If set, the date the subscription expires based on the billing model
	BillingExpirationDate *time.Time `json:"billing_expiration_date,omitempty"`
	BillingMarketplaceAccount *string `json:"billing_marketplace_account,omitempty"`
	CloudAccountId *string `json:"cloud_account_id,omitempty"`
	CloudProviderId *string `json:"cloud_provider_id,omitempty"`
	ClusterBillingModel *string `json:"cluster_billing_model,omitempty"`
	ClusterId *string `json:"cluster_id,omitempty"`
	ConsoleUrl *string `json:"console_url,omitempty"`
	ConsumerUuid *string `json:"consumer_uuid,omitempty"`
	CpuTotal *int32 `json:"cpu_total,omitempty"`
	CreatorId *string `json:"creator_id,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	ExternalClusterId *string `json:"external_cluster_id,omitempty"`
	// Last time this subscription were reconciled about cluster usage
	LastReconcileDate *time.Time `json:"last_reconcile_date,omitempty"`
	// Last time status was set to Released for this cluster/subscription in Unix time
	LastReleasedAt *time.Time `json:"last_released_at,omitempty"`
	// Last telemetry authorization request for this cluster/subscription in Unix time
	LastTelemetryDate *time.Time `json:"last_telemetry_date,omitempty"`
	Managed bool `json:"managed"`
	OrganizationId *string `json:"organization_id,omitempty"`
	PlanId *string `json:"plan_id,omitempty"`
	ProductBundle *string `json:"product_bundle,omitempty"`
	Provenance *string `json:"provenance,omitempty"`
	RegionId *string `json:"region_id,omitempty"`
	Released *bool `json:"released,omitempty"`
	ServiceLevel *string `json:"service_level,omitempty"`
	SocketTotal *int32 `json:"socket_total,omitempty"`
	Status *string `json:"status,omitempty"`
	SupportLevel *string `json:"support_level,omitempty"`
	SystemUnits *string `json:"system_units,omitempty"`
	// If the subscription is a trial, date the trial ends
	TrialEndDate *time.Time `json:"trial_end_date,omitempty"`
	Usage *string `json:"usage,omitempty"`
	Capabilities []Capability `json:"capabilities,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Creator *AccountReference `json:"creator,omitempty"`
	// Calulated as the subscription created date + 60 days
	EvalExpirationDate *time.Time `json:"eval_expiration_date,omitempty"`
	Labels []Label `json:"labels,omitempty"`
	Metrics []OneMetric `json:"metrics,omitempty"`
	NotificationContacts []Account `json:"notification_contacts,omitempty"`
	Plan *Plan `json:"plan,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewSubscription instantiates a new Subscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscription(managed bool) *Subscription {
	this := Subscription{}
	this.Managed = managed
	return &this
}

// NewSubscriptionWithDefaults instantiates a new Subscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionWithDefaults() *Subscription {
	this := Subscription{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *Subscription) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *Subscription) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *Subscription) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Subscription) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Subscription) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Subscription) SetId(v string) {
	o.Id = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *Subscription) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *Subscription) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *Subscription) SetKind(v string) {
	o.Kind = &v
}

// GetBillingExpirationDate returns the BillingExpirationDate field value if set, zero value otherwise.
func (o *Subscription) GetBillingExpirationDate() time.Time {
	if o == nil || IsNil(o.BillingExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.BillingExpirationDate
}

// GetBillingExpirationDateOk returns a tuple with the BillingExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetBillingExpirationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.BillingExpirationDate) {
		return nil, false
	}
	return o.BillingExpirationDate, true
}

// HasBillingExpirationDate returns a boolean if a field has been set.
func (o *Subscription) HasBillingExpirationDate() bool {
	if o != nil && !IsNil(o.BillingExpirationDate) {
		return true
	}

	return false
}

// SetBillingExpirationDate gets a reference to the given time.Time and assigns it to the BillingExpirationDate field.
func (o *Subscription) SetBillingExpirationDate(v time.Time) {
	o.BillingExpirationDate = &v
}

// GetBillingMarketplaceAccount returns the BillingMarketplaceAccount field value if set, zero value otherwise.
func (o *Subscription) GetBillingMarketplaceAccount() string {
	if o == nil || IsNil(o.BillingMarketplaceAccount) {
		var ret string
		return ret
	}
	return *o.BillingMarketplaceAccount
}

// GetBillingMarketplaceAccountOk returns a tuple with the BillingMarketplaceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetBillingMarketplaceAccountOk() (*string, bool) {
	if o == nil || IsNil(o.BillingMarketplaceAccount) {
		return nil, false
	}
	return o.BillingMarketplaceAccount, true
}

// HasBillingMarketplaceAccount returns a boolean if a field has been set.
func (o *Subscription) HasBillingMarketplaceAccount() bool {
	if o != nil && !IsNil(o.BillingMarketplaceAccount) {
		return true
	}

	return false
}

// SetBillingMarketplaceAccount gets a reference to the given string and assigns it to the BillingMarketplaceAccount field.
func (o *Subscription) SetBillingMarketplaceAccount(v string) {
	o.BillingMarketplaceAccount = &v
}

// GetCloudAccountId returns the CloudAccountId field value if set, zero value otherwise.
func (o *Subscription) GetCloudAccountId() string {
	if o == nil || IsNil(o.CloudAccountId) {
		var ret string
		return ret
	}
	return *o.CloudAccountId
}

// GetCloudAccountIdOk returns a tuple with the CloudAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCloudAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.CloudAccountId) {
		return nil, false
	}
	return o.CloudAccountId, true
}

// HasCloudAccountId returns a boolean if a field has been set.
func (o *Subscription) HasCloudAccountId() bool {
	if o != nil && !IsNil(o.CloudAccountId) {
		return true
	}

	return false
}

// SetCloudAccountId gets a reference to the given string and assigns it to the CloudAccountId field.
func (o *Subscription) SetCloudAccountId(v string) {
	o.CloudAccountId = &v
}

// GetCloudProviderId returns the CloudProviderId field value if set, zero value otherwise.
func (o *Subscription) GetCloudProviderId() string {
	if o == nil || IsNil(o.CloudProviderId) {
		var ret string
		return ret
	}
	return *o.CloudProviderId
}

// GetCloudProviderIdOk returns a tuple with the CloudProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCloudProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.CloudProviderId) {
		return nil, false
	}
	return o.CloudProviderId, true
}

// HasCloudProviderId returns a boolean if a field has been set.
func (o *Subscription) HasCloudProviderId() bool {
	if o != nil && !IsNil(o.CloudProviderId) {
		return true
	}

	return false
}

// SetCloudProviderId gets a reference to the given string and assigns it to the CloudProviderId field.
func (o *Subscription) SetCloudProviderId(v string) {
	o.CloudProviderId = &v
}

// GetClusterBillingModel returns the ClusterBillingModel field value if set, zero value otherwise.
func (o *Subscription) GetClusterBillingModel() string {
	if o == nil || IsNil(o.ClusterBillingModel) {
		var ret string
		return ret
	}
	return *o.ClusterBillingModel
}

// GetClusterBillingModelOk returns a tuple with the ClusterBillingModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetClusterBillingModelOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterBillingModel) {
		return nil, false
	}
	return o.ClusterBillingModel, true
}

// HasClusterBillingModel returns a boolean if a field has been set.
func (o *Subscription) HasClusterBillingModel() bool {
	if o != nil && !IsNil(o.ClusterBillingModel) {
		return true
	}

	return false
}

// SetClusterBillingModel gets a reference to the given string and assigns it to the ClusterBillingModel field.
func (o *Subscription) SetClusterBillingModel(v string) {
	o.ClusterBillingModel = &v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *Subscription) GetClusterId() string {
	if o == nil || IsNil(o.ClusterId) {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *Subscription) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *Subscription) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetConsoleUrl returns the ConsoleUrl field value if set, zero value otherwise.
func (o *Subscription) GetConsoleUrl() string {
	if o == nil || IsNil(o.ConsoleUrl) {
		var ret string
		return ret
	}
	return *o.ConsoleUrl
}

// GetConsoleUrlOk returns a tuple with the ConsoleUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetConsoleUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ConsoleUrl) {
		return nil, false
	}
	return o.ConsoleUrl, true
}

// HasConsoleUrl returns a boolean if a field has been set.
func (o *Subscription) HasConsoleUrl() bool {
	if o != nil && !IsNil(o.ConsoleUrl) {
		return true
	}

	return false
}

// SetConsoleUrl gets a reference to the given string and assigns it to the ConsoleUrl field.
func (o *Subscription) SetConsoleUrl(v string) {
	o.ConsoleUrl = &v
}

// GetConsumerUuid returns the ConsumerUuid field value if set, zero value otherwise.
func (o *Subscription) GetConsumerUuid() string {
	if o == nil || IsNil(o.ConsumerUuid) {
		var ret string
		return ret
	}
	return *o.ConsumerUuid
}

// GetConsumerUuidOk returns a tuple with the ConsumerUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetConsumerUuidOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumerUuid) {
		return nil, false
	}
	return o.ConsumerUuid, true
}

// HasConsumerUuid returns a boolean if a field has been set.
func (o *Subscription) HasConsumerUuid() bool {
	if o != nil && !IsNil(o.ConsumerUuid) {
		return true
	}

	return false
}

// SetConsumerUuid gets a reference to the given string and assigns it to the ConsumerUuid field.
func (o *Subscription) SetConsumerUuid(v string) {
	o.ConsumerUuid = &v
}

// GetCpuTotal returns the CpuTotal field value if set, zero value otherwise.
func (o *Subscription) GetCpuTotal() int32 {
	if o == nil || IsNil(o.CpuTotal) {
		var ret int32
		return ret
	}
	return *o.CpuTotal
}

// GetCpuTotalOk returns a tuple with the CpuTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCpuTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.CpuTotal) {
		return nil, false
	}
	return o.CpuTotal, true
}

// HasCpuTotal returns a boolean if a field has been set.
func (o *Subscription) HasCpuTotal() bool {
	if o != nil && !IsNil(o.CpuTotal) {
		return true
	}

	return false
}

// SetCpuTotal gets a reference to the given int32 and assigns it to the CpuTotal field.
func (o *Subscription) SetCpuTotal(v int32) {
	o.CpuTotal = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *Subscription) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *Subscription) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *Subscription) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Subscription) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Subscription) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Subscription) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetExternalClusterId returns the ExternalClusterId field value if set, zero value otherwise.
func (o *Subscription) GetExternalClusterId() string {
	if o == nil || IsNil(o.ExternalClusterId) {
		var ret string
		return ret
	}
	return *o.ExternalClusterId
}

// GetExternalClusterIdOk returns a tuple with the ExternalClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetExternalClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalClusterId) {
		return nil, false
	}
	return o.ExternalClusterId, true
}

// HasExternalClusterId returns a boolean if a field has been set.
func (o *Subscription) HasExternalClusterId() bool {
	if o != nil && !IsNil(o.ExternalClusterId) {
		return true
	}

	return false
}

// SetExternalClusterId gets a reference to the given string and assigns it to the ExternalClusterId field.
func (o *Subscription) SetExternalClusterId(v string) {
	o.ExternalClusterId = &v
}

// GetLastReconcileDate returns the LastReconcileDate field value if set, zero value otherwise.
func (o *Subscription) GetLastReconcileDate() time.Time {
	if o == nil || IsNil(o.LastReconcileDate) {
		var ret time.Time
		return ret
	}
	return *o.LastReconcileDate
}

// GetLastReconcileDateOk returns a tuple with the LastReconcileDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetLastReconcileDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastReconcileDate) {
		return nil, false
	}
	return o.LastReconcileDate, true
}

// HasLastReconcileDate returns a boolean if a field has been set.
func (o *Subscription) HasLastReconcileDate() bool {
	if o != nil && !IsNil(o.LastReconcileDate) {
		return true
	}

	return false
}

// SetLastReconcileDate gets a reference to the given time.Time and assigns it to the LastReconcileDate field.
func (o *Subscription) SetLastReconcileDate(v time.Time) {
	o.LastReconcileDate = &v
}

// GetLastReleasedAt returns the LastReleasedAt field value if set, zero value otherwise.
func (o *Subscription) GetLastReleasedAt() time.Time {
	if o == nil || IsNil(o.LastReleasedAt) {
		var ret time.Time
		return ret
	}
	return *o.LastReleasedAt
}

// GetLastReleasedAtOk returns a tuple with the LastReleasedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetLastReleasedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastReleasedAt) {
		return nil, false
	}
	return o.LastReleasedAt, true
}

// HasLastReleasedAt returns a boolean if a field has been set.
func (o *Subscription) HasLastReleasedAt() bool {
	if o != nil && !IsNil(o.LastReleasedAt) {
		return true
	}

	return false
}

// SetLastReleasedAt gets a reference to the given time.Time and assigns it to the LastReleasedAt field.
func (o *Subscription) SetLastReleasedAt(v time.Time) {
	o.LastReleasedAt = &v
}

// GetLastTelemetryDate returns the LastTelemetryDate field value if set, zero value otherwise.
func (o *Subscription) GetLastTelemetryDate() time.Time {
	if o == nil || IsNil(o.LastTelemetryDate) {
		var ret time.Time
		return ret
	}
	return *o.LastTelemetryDate
}

// GetLastTelemetryDateOk returns a tuple with the LastTelemetryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetLastTelemetryDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastTelemetryDate) {
		return nil, false
	}
	return o.LastTelemetryDate, true
}

// HasLastTelemetryDate returns a boolean if a field has been set.
func (o *Subscription) HasLastTelemetryDate() bool {
	if o != nil && !IsNil(o.LastTelemetryDate) {
		return true
	}

	return false
}

// SetLastTelemetryDate gets a reference to the given time.Time and assigns it to the LastTelemetryDate field.
func (o *Subscription) SetLastTelemetryDate(v time.Time) {
	o.LastTelemetryDate = &v
}

// GetManaged returns the Managed field value
func (o *Subscription) GetManaged() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Managed
}

// GetManagedOk returns a tuple with the Managed field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetManagedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Managed, true
}

// SetManaged sets field value
func (o *Subscription) SetManaged(v bool) {
	o.Managed = v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *Subscription) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *Subscription) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *Subscription) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *Subscription) GetPlanId() string {
	if o == nil || IsNil(o.PlanId) {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *Subscription) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *Subscription) SetPlanId(v string) {
	o.PlanId = &v
}

// GetProductBundle returns the ProductBundle field value if set, zero value otherwise.
func (o *Subscription) GetProductBundle() string {
	if o == nil || IsNil(o.ProductBundle) {
		var ret string
		return ret
	}
	return *o.ProductBundle
}

// GetProductBundleOk returns a tuple with the ProductBundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetProductBundleOk() (*string, bool) {
	if o == nil || IsNil(o.ProductBundle) {
		return nil, false
	}
	return o.ProductBundle, true
}

// HasProductBundle returns a boolean if a field has been set.
func (o *Subscription) HasProductBundle() bool {
	if o != nil && !IsNil(o.ProductBundle) {
		return true
	}

	return false
}

// SetProductBundle gets a reference to the given string and assigns it to the ProductBundle field.
func (o *Subscription) SetProductBundle(v string) {
	o.ProductBundle = &v
}

// GetProvenance returns the Provenance field value if set, zero value otherwise.
func (o *Subscription) GetProvenance() string {
	if o == nil || IsNil(o.Provenance) {
		var ret string
		return ret
	}
	return *o.Provenance
}

// GetProvenanceOk returns a tuple with the Provenance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetProvenanceOk() (*string, bool) {
	if o == nil || IsNil(o.Provenance) {
		return nil, false
	}
	return o.Provenance, true
}

// HasProvenance returns a boolean if a field has been set.
func (o *Subscription) HasProvenance() bool {
	if o != nil && !IsNil(o.Provenance) {
		return true
	}

	return false
}

// SetProvenance gets a reference to the given string and assigns it to the Provenance field.
func (o *Subscription) SetProvenance(v string) {
	o.Provenance = &v
}

// GetRegionId returns the RegionId field value if set, zero value otherwise.
func (o *Subscription) GetRegionId() string {
	if o == nil || IsNil(o.RegionId) {
		var ret string
		return ret
	}
	return *o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetRegionIdOk() (*string, bool) {
	if o == nil || IsNil(o.RegionId) {
		return nil, false
	}
	return o.RegionId, true
}

// HasRegionId returns a boolean if a field has been set.
func (o *Subscription) HasRegionId() bool {
	if o != nil && !IsNil(o.RegionId) {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given string and assigns it to the RegionId field.
func (o *Subscription) SetRegionId(v string) {
	o.RegionId = &v
}

// GetReleased returns the Released field value if set, zero value otherwise.
func (o *Subscription) GetReleased() bool {
	if o == nil || IsNil(o.Released) {
		var ret bool
		return ret
	}
	return *o.Released
}

// GetReleasedOk returns a tuple with the Released field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetReleasedOk() (*bool, bool) {
	if o == nil || IsNil(o.Released) {
		return nil, false
	}
	return o.Released, true
}

// HasReleased returns a boolean if a field has been set.
func (o *Subscription) HasReleased() bool {
	if o != nil && !IsNil(o.Released) {
		return true
	}

	return false
}

// SetReleased gets a reference to the given bool and assigns it to the Released field.
func (o *Subscription) SetReleased(v bool) {
	o.Released = &v
}

// GetServiceLevel returns the ServiceLevel field value if set, zero value otherwise.
func (o *Subscription) GetServiceLevel() string {
	if o == nil || IsNil(o.ServiceLevel) {
		var ret string
		return ret
	}
	return *o.ServiceLevel
}

// GetServiceLevelOk returns a tuple with the ServiceLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetServiceLevelOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceLevel) {
		return nil, false
	}
	return o.ServiceLevel, true
}

// HasServiceLevel returns a boolean if a field has been set.
func (o *Subscription) HasServiceLevel() bool {
	if o != nil && !IsNil(o.ServiceLevel) {
		return true
	}

	return false
}

// SetServiceLevel gets a reference to the given string and assigns it to the ServiceLevel field.
func (o *Subscription) SetServiceLevel(v string) {
	o.ServiceLevel = &v
}

// GetSocketTotal returns the SocketTotal field value if set, zero value otherwise.
func (o *Subscription) GetSocketTotal() int32 {
	if o == nil || IsNil(o.SocketTotal) {
		var ret int32
		return ret
	}
	return *o.SocketTotal
}

// GetSocketTotalOk returns a tuple with the SocketTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetSocketTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.SocketTotal) {
		return nil, false
	}
	return o.SocketTotal, true
}

// HasSocketTotal returns a boolean if a field has been set.
func (o *Subscription) HasSocketTotal() bool {
	if o != nil && !IsNil(o.SocketTotal) {
		return true
	}

	return false
}

// SetSocketTotal gets a reference to the given int32 and assigns it to the SocketTotal field.
func (o *Subscription) SetSocketTotal(v int32) {
	o.SocketTotal = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Subscription) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Subscription) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Subscription) SetStatus(v string) {
	o.Status = &v
}

// GetSupportLevel returns the SupportLevel field value if set, zero value otherwise.
func (o *Subscription) GetSupportLevel() string {
	if o == nil || IsNil(o.SupportLevel) {
		var ret string
		return ret
	}
	return *o.SupportLevel
}

// GetSupportLevelOk returns a tuple with the SupportLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetSupportLevelOk() (*string, bool) {
	if o == nil || IsNil(o.SupportLevel) {
		return nil, false
	}
	return o.SupportLevel, true
}

// HasSupportLevel returns a boolean if a field has been set.
func (o *Subscription) HasSupportLevel() bool {
	if o != nil && !IsNil(o.SupportLevel) {
		return true
	}

	return false
}

// SetSupportLevel gets a reference to the given string and assigns it to the SupportLevel field.
func (o *Subscription) SetSupportLevel(v string) {
	o.SupportLevel = &v
}

// GetSystemUnits returns the SystemUnits field value if set, zero value otherwise.
func (o *Subscription) GetSystemUnits() string {
	if o == nil || IsNil(o.SystemUnits) {
		var ret string
		return ret
	}
	return *o.SystemUnits
}

// GetSystemUnitsOk returns a tuple with the SystemUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetSystemUnitsOk() (*string, bool) {
	if o == nil || IsNil(o.SystemUnits) {
		return nil, false
	}
	return o.SystemUnits, true
}

// HasSystemUnits returns a boolean if a field has been set.
func (o *Subscription) HasSystemUnits() bool {
	if o != nil && !IsNil(o.SystemUnits) {
		return true
	}

	return false
}

// SetSystemUnits gets a reference to the given string and assigns it to the SystemUnits field.
func (o *Subscription) SetSystemUnits(v string) {
	o.SystemUnits = &v
}

// GetTrialEndDate returns the TrialEndDate field value if set, zero value otherwise.
func (o *Subscription) GetTrialEndDate() time.Time {
	if o == nil || IsNil(o.TrialEndDate) {
		var ret time.Time
		return ret
	}
	return *o.TrialEndDate
}

// GetTrialEndDateOk returns a tuple with the TrialEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetTrialEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TrialEndDate) {
		return nil, false
	}
	return o.TrialEndDate, true
}

// HasTrialEndDate returns a boolean if a field has been set.
func (o *Subscription) HasTrialEndDate() bool {
	if o != nil && !IsNil(o.TrialEndDate) {
		return true
	}

	return false
}

// SetTrialEndDate gets a reference to the given time.Time and assigns it to the TrialEndDate field.
func (o *Subscription) SetTrialEndDate(v time.Time) {
	o.TrialEndDate = &v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *Subscription) GetUsage() string {
	if o == nil || IsNil(o.Usage) {
		var ret string
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetUsageOk() (*string, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *Subscription) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given string and assigns it to the Usage field.
func (o *Subscription) SetUsage(v string) {
	o.Usage = &v
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *Subscription) GetCapabilities() []Capability {
	if o == nil || IsNil(o.Capabilities) {
		var ret []Capability
		return ret
	}
	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCapabilitiesOk() ([]Capability, bool) {
	if o == nil || IsNil(o.Capabilities) {
		return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *Subscription) HasCapabilities() bool {
	if o != nil && !IsNil(o.Capabilities) {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given []Capability and assigns it to the Capabilities field.
func (o *Subscription) SetCapabilities(v []Capability) {
	o.Capabilities = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Subscription) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Subscription) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Subscription) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *Subscription) GetCreator() AccountReference {
	if o == nil || IsNil(o.Creator) {
		var ret AccountReference
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCreatorOk() (*AccountReference, bool) {
	if o == nil || IsNil(o.Creator) {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *Subscription) HasCreator() bool {
	if o != nil && !IsNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given AccountReference and assigns it to the Creator field.
func (o *Subscription) SetCreator(v AccountReference) {
	o.Creator = &v
}

// GetEvalExpirationDate returns the EvalExpirationDate field value if set, zero value otherwise.
func (o *Subscription) GetEvalExpirationDate() time.Time {
	if o == nil || IsNil(o.EvalExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.EvalExpirationDate
}

// GetEvalExpirationDateOk returns a tuple with the EvalExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetEvalExpirationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EvalExpirationDate) {
		return nil, false
	}
	return o.EvalExpirationDate, true
}

// HasEvalExpirationDate returns a boolean if a field has been set.
func (o *Subscription) HasEvalExpirationDate() bool {
	if o != nil && !IsNil(o.EvalExpirationDate) {
		return true
	}

	return false
}

// SetEvalExpirationDate gets a reference to the given time.Time and assigns it to the EvalExpirationDate field.
func (o *Subscription) SetEvalExpirationDate(v time.Time) {
	o.EvalExpirationDate = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *Subscription) GetLabels() []Label {
	if o == nil || IsNil(o.Labels) {
		var ret []Label
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetLabelsOk() ([]Label, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *Subscription) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []Label and assigns it to the Labels field.
func (o *Subscription) SetLabels(v []Label) {
	o.Labels = v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *Subscription) GetMetrics() []OneMetric {
	if o == nil || IsNil(o.Metrics) {
		var ret []OneMetric
		return ret
	}
	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetMetricsOk() ([]OneMetric, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *Subscription) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given []OneMetric and assigns it to the Metrics field.
func (o *Subscription) SetMetrics(v []OneMetric) {
	o.Metrics = v
}

// GetNotificationContacts returns the NotificationContacts field value if set, zero value otherwise.
func (o *Subscription) GetNotificationContacts() []Account {
	if o == nil || IsNil(o.NotificationContacts) {
		var ret []Account
		return ret
	}
	return o.NotificationContacts
}

// GetNotificationContactsOk returns a tuple with the NotificationContacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetNotificationContactsOk() ([]Account, bool) {
	if o == nil || IsNil(o.NotificationContacts) {
		return nil, false
	}
	return o.NotificationContacts, true
}

// HasNotificationContacts returns a boolean if a field has been set.
func (o *Subscription) HasNotificationContacts() bool {
	if o != nil && !IsNil(o.NotificationContacts) {
		return true
	}

	return false
}

// SetNotificationContacts gets a reference to the given []Account and assigns it to the NotificationContacts field.
func (o *Subscription) SetNotificationContacts(v []Account) {
	o.NotificationContacts = v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *Subscription) GetPlan() Plan {
	if o == nil || IsNil(o.Plan) {
		var ret Plan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetPlanOk() (*Plan, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *Subscription) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given Plan and assigns it to the Plan field.
func (o *Subscription) SetPlan(v Plan) {
	o.Plan = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Subscription) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Subscription) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Subscription) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o Subscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Subscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.BillingExpirationDate) {
		toSerialize["billing_expiration_date"] = o.BillingExpirationDate
	}
	if !IsNil(o.BillingMarketplaceAccount) {
		toSerialize["billing_marketplace_account"] = o.BillingMarketplaceAccount
	}
	if !IsNil(o.CloudAccountId) {
		toSerialize["cloud_account_id"] = o.CloudAccountId
	}
	if !IsNil(o.CloudProviderId) {
		toSerialize["cloud_provider_id"] = o.CloudProviderId
	}
	if !IsNil(o.ClusterBillingModel) {
		toSerialize["cluster_billing_model"] = o.ClusterBillingModel
	}
	if !IsNil(o.ClusterId) {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if !IsNil(o.ConsoleUrl) {
		toSerialize["console_url"] = o.ConsoleUrl
	}
	if !IsNil(o.ConsumerUuid) {
		toSerialize["consumer_uuid"] = o.ConsumerUuid
	}
	if !IsNil(o.CpuTotal) {
		toSerialize["cpu_total"] = o.CpuTotal
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creator_id"] = o.CreatorId
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.ExternalClusterId) {
		toSerialize["external_cluster_id"] = o.ExternalClusterId
	}
	if !IsNil(o.LastReconcileDate) {
		toSerialize["last_reconcile_date"] = o.LastReconcileDate
	}
	if !IsNil(o.LastReleasedAt) {
		toSerialize["last_released_at"] = o.LastReleasedAt
	}
	if !IsNil(o.LastTelemetryDate) {
		toSerialize["last_telemetry_date"] = o.LastTelemetryDate
	}
	toSerialize["managed"] = o.Managed
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.PlanId) {
		toSerialize["plan_id"] = o.PlanId
	}
	if !IsNil(o.ProductBundle) {
		toSerialize["product_bundle"] = o.ProductBundle
	}
	if !IsNil(o.Provenance) {
		toSerialize["provenance"] = o.Provenance
	}
	if !IsNil(o.RegionId) {
		toSerialize["region_id"] = o.RegionId
	}
	if !IsNil(o.Released) {
		toSerialize["released"] = o.Released
	}
	if !IsNil(o.ServiceLevel) {
		toSerialize["service_level"] = o.ServiceLevel
	}
	if !IsNil(o.SocketTotal) {
		toSerialize["socket_total"] = o.SocketTotal
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SupportLevel) {
		toSerialize["support_level"] = o.SupportLevel
	}
	if !IsNil(o.SystemUnits) {
		toSerialize["system_units"] = o.SystemUnits
	}
	if !IsNil(o.TrialEndDate) {
		toSerialize["trial_end_date"] = o.TrialEndDate
	}
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	if !IsNil(o.Capabilities) {
		toSerialize["capabilities"] = o.Capabilities
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Creator) {
		toSerialize["creator"] = o.Creator
	}
	if !IsNil(o.EvalExpirationDate) {
		toSerialize["eval_expiration_date"] = o.EvalExpirationDate
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	if !IsNil(o.NotificationContacts) {
		toSerialize["notification_contacts"] = o.NotificationContacts
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableSubscription struct {
	value *Subscription
	isSet bool
}

func (v NullableSubscription) Get() *Subscription {
	return v.value
}

func (v *NullableSubscription) Set(val *Subscription) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscription(val *Subscription) *NullableSubscription {
	return &NullableSubscription{value: val, isSet: true}
}

func (v NullableSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


