/*
Account Management Service API

Manage user subscriptions and clusters

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmgmtclient

import (
	"encoding/json"
	"time"
)

// checks if the AccountListAllOfItemsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountListAllOfItemsInner{}

// AccountListAllOfItemsInner struct for AccountListAllOfItemsInner
type AccountListAllOfItemsInner struct {
	Href *string `json:"href,omitempty"`
	Id *string `json:"id,omitempty"`
	Kind *string `json:"kind,omitempty"`
	BanCode *string `json:"ban_code,omitempty"`
	BanDescription *string `json:"ban_description,omitempty"`
	Banned *bool `json:"banned,omitempty"`
	Capabilities []Capability `json:"capabilities,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Email *string `json:"email,omitempty"`
	FirstName *string `json:"first_name,omitempty"`
	Labels []Label `json:"labels,omitempty"`
	LastName *string `json:"last_name,omitempty"`
	Organization *Organization `json:"organization,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
	RhitAccountId *string `json:"rhit_account_id,omitempty"`
	RhitWebUserId *string `json:"rhit_web_user_id,omitempty"`
	ServiceAccount *bool `json:"service_account,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	Username string `json:"username"`
}

// NewAccountListAllOfItemsInner instantiates a new AccountListAllOfItemsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountListAllOfItemsInner(username string) *AccountListAllOfItemsInner {
	this := AccountListAllOfItemsInner{}
	var banned bool = false
	this.Banned = &banned
	var serviceAccount bool = false
	this.ServiceAccount = &serviceAccount
	this.Username = username
	return &this
}

// NewAccountListAllOfItemsInnerWithDefaults instantiates a new AccountListAllOfItemsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountListAllOfItemsInnerWithDefaults() *AccountListAllOfItemsInner {
	this := AccountListAllOfItemsInner{}
	var banned bool = false
	this.Banned = &banned
	var serviceAccount bool = false
	this.ServiceAccount = &serviceAccount
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *AccountListAllOfItemsInner) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AccountListAllOfItemsInner) SetId(v string) {
	o.Id = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *AccountListAllOfItemsInner) SetKind(v string) {
	o.Kind = &v
}

// GetBanCode returns the BanCode field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetBanCode() string {
	if o == nil || IsNil(o.BanCode) {
		var ret string
		return ret
	}
	return *o.BanCode
}

// GetBanCodeOk returns a tuple with the BanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetBanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BanCode) {
		return nil, false
	}
	return o.BanCode, true
}

// HasBanCode returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasBanCode() bool {
	if o != nil && !IsNil(o.BanCode) {
		return true
	}

	return false
}

// SetBanCode gets a reference to the given string and assigns it to the BanCode field.
func (o *AccountListAllOfItemsInner) SetBanCode(v string) {
	o.BanCode = &v
}

// GetBanDescription returns the BanDescription field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetBanDescription() string {
	if o == nil || IsNil(o.BanDescription) {
		var ret string
		return ret
	}
	return *o.BanDescription
}

// GetBanDescriptionOk returns a tuple with the BanDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetBanDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.BanDescription) {
		return nil, false
	}
	return o.BanDescription, true
}

// HasBanDescription returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasBanDescription() bool {
	if o != nil && !IsNil(o.BanDescription) {
		return true
	}

	return false
}

// SetBanDescription gets a reference to the given string and assigns it to the BanDescription field.
func (o *AccountListAllOfItemsInner) SetBanDescription(v string) {
	o.BanDescription = &v
}

// GetBanned returns the Banned field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetBanned() bool {
	if o == nil || IsNil(o.Banned) {
		var ret bool
		return ret
	}
	return *o.Banned
}

// GetBannedOk returns a tuple with the Banned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetBannedOk() (*bool, bool) {
	if o == nil || IsNil(o.Banned) {
		return nil, false
	}
	return o.Banned, true
}

// HasBanned returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasBanned() bool {
	if o != nil && !IsNil(o.Banned) {
		return true
	}

	return false
}

// SetBanned gets a reference to the given bool and assigns it to the Banned field.
func (o *AccountListAllOfItemsInner) SetBanned(v bool) {
	o.Banned = &v
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetCapabilities() []Capability {
	if o == nil || IsNil(o.Capabilities) {
		var ret []Capability
		return ret
	}
	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetCapabilitiesOk() ([]Capability, bool) {
	if o == nil || IsNil(o.Capabilities) {
		return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasCapabilities() bool {
	if o != nil && !IsNil(o.Capabilities) {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given []Capability and assigns it to the Capabilities field.
func (o *AccountListAllOfItemsInner) SetCapabilities(v []Capability) {
	o.Capabilities = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *AccountListAllOfItemsInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AccountListAllOfItemsInner) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *AccountListAllOfItemsInner) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetLabels() []Label {
	if o == nil || IsNil(o.Labels) {
		var ret []Label
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetLabelsOk() ([]Label, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []Label and assigns it to the Labels field.
func (o *AccountListAllOfItemsInner) SetLabels(v []Label) {
	o.Labels = v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *AccountListAllOfItemsInner) SetLastName(v string) {
	o.LastName = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetOrganization() Organization {
	if o == nil || IsNil(o.Organization) {
		var ret Organization
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetOrganizationOk() (*Organization, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given Organization and assigns it to the Organization field.
func (o *AccountListAllOfItemsInner) SetOrganization(v Organization) {
	o.Organization = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *AccountListAllOfItemsInner) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetRhitAccountId returns the RhitAccountId field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetRhitAccountId() string {
	if o == nil || IsNil(o.RhitAccountId) {
		var ret string
		return ret
	}
	return *o.RhitAccountId
}

// GetRhitAccountIdOk returns a tuple with the RhitAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetRhitAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.RhitAccountId) {
		return nil, false
	}
	return o.RhitAccountId, true
}

// HasRhitAccountId returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasRhitAccountId() bool {
	if o != nil && !IsNil(o.RhitAccountId) {
		return true
	}

	return false
}

// SetRhitAccountId gets a reference to the given string and assigns it to the RhitAccountId field.
func (o *AccountListAllOfItemsInner) SetRhitAccountId(v string) {
	o.RhitAccountId = &v
}

// GetRhitWebUserId returns the RhitWebUserId field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetRhitWebUserId() string {
	if o == nil || IsNil(o.RhitWebUserId) {
		var ret string
		return ret
	}
	return *o.RhitWebUserId
}

// GetRhitWebUserIdOk returns a tuple with the RhitWebUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetRhitWebUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.RhitWebUserId) {
		return nil, false
	}
	return o.RhitWebUserId, true
}

// HasRhitWebUserId returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasRhitWebUserId() bool {
	if o != nil && !IsNil(o.RhitWebUserId) {
		return true
	}

	return false
}

// SetRhitWebUserId gets a reference to the given string and assigns it to the RhitWebUserId field.
func (o *AccountListAllOfItemsInner) SetRhitWebUserId(v string) {
	o.RhitWebUserId = &v
}

// GetServiceAccount returns the ServiceAccount field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetServiceAccount() bool {
	if o == nil || IsNil(o.ServiceAccount) {
		var ret bool
		return ret
	}
	return *o.ServiceAccount
}

// GetServiceAccountOk returns a tuple with the ServiceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetServiceAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.ServiceAccount) {
		return nil, false
	}
	return o.ServiceAccount, true
}

// HasServiceAccount returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasServiceAccount() bool {
	if o != nil && !IsNil(o.ServiceAccount) {
		return true
	}

	return false
}

// SetServiceAccount gets a reference to the given bool and assigns it to the ServiceAccount field.
func (o *AccountListAllOfItemsInner) SetServiceAccount(v bool) {
	o.ServiceAccount = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AccountListAllOfItemsInner) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AccountListAllOfItemsInner) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *AccountListAllOfItemsInner) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUsername returns the Username field value
func (o *AccountListAllOfItemsInner) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *AccountListAllOfItemsInner) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *AccountListAllOfItemsInner) SetUsername(v string) {
	o.Username = v
}

func (o AccountListAllOfItemsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountListAllOfItemsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.BanCode) {
		toSerialize["ban_code"] = o.BanCode
	}
	if !IsNil(o.BanDescription) {
		toSerialize["ban_description"] = o.BanDescription
	}
	if !IsNil(o.Banned) {
		toSerialize["banned"] = o.Banned
	}
	if !IsNil(o.Capabilities) {
		toSerialize["capabilities"] = o.Capabilities
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.RhitAccountId) {
		toSerialize["rhit_account_id"] = o.RhitAccountId
	}
	if !IsNil(o.RhitWebUserId) {
		toSerialize["rhit_web_user_id"] = o.RhitWebUserId
	}
	if !IsNil(o.ServiceAccount) {
		toSerialize["service_account"] = o.ServiceAccount
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	toSerialize["username"] = o.Username
	return toSerialize, nil
}

type NullableAccountListAllOfItemsInner struct {
	value *AccountListAllOfItemsInner
	isSet bool
}

func (v NullableAccountListAllOfItemsInner) Get() *AccountListAllOfItemsInner {
	return v.value
}

func (v *NullableAccountListAllOfItemsInner) Set(val *AccountListAllOfItemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountListAllOfItemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountListAllOfItemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountListAllOfItemsInner(val *AccountListAllOfItemsInner) *NullableAccountListAllOfItemsInner {
	return &NullableAccountListAllOfItemsInner{value: val, isSet: true}
}

func (v NullableAccountListAllOfItemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountListAllOfItemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


