/*
Account Management Service API

Manage user subscriptions and clusters

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmgmtclient

import (
	"encoding/json"
	"time"
)

// checks if the SummaryVector type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SummaryVector{}

// SummaryVector struct for SummaryVector
type SummaryVector struct {
	Time *time.Time `json:"time,omitempty"`
	Value *float64 `json:"value,omitempty"`
}

// NewSummaryVector instantiates a new SummaryVector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSummaryVector() *SummaryVector {
	this := SummaryVector{}
	return &this
}

// NewSummaryVectorWithDefaults instantiates a new SummaryVector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSummaryVectorWithDefaults() *SummaryVector {
	this := SummaryVector{}
	return &this
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *SummaryVector) GetTime() time.Time {
	if o == nil || IsNil(o.Time) {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryVector) GetTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *SummaryVector) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *SummaryVector) SetTime(v time.Time) {
	o.Time = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *SummaryVector) GetValue() float64 {
	if o == nil || IsNil(o.Value) {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryVector) GetValueOk() (*float64, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *SummaryVector) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *SummaryVector) SetValue(v float64) {
	o.Value = &v
}

func (o SummaryVector) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SummaryVector) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableSummaryVector struct {
	value *SummaryVector
	isSet bool
}

func (v NullableSummaryVector) Get() *SummaryVector {
	return v.value
}

func (v *NullableSummaryVector) Set(val *SummaryVector) {
	v.value = val
	v.isSet = true
}

func (v NullableSummaryVector) IsSet() bool {
	return v.isSet
}

func (v *NullableSummaryVector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSummaryVector(val *SummaryVector) *NullableSummaryVector {
	return &NullableSummaryVector{value: val, isSet: true}
}

func (v NullableSummaryVector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSummaryVector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


