/*
Kafka Management API

Kafka Management API is a REST API to manage Kafka instances

API version: 1.16.0
Contact: rhosak-support@redhat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kafkamgmtclient

import (
	"encoding/json"
	"time"
)

// checks if the KafkaRequestListAllOfItemsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KafkaRequestListAllOfItemsInner{}

// KafkaRequestListAllOfItemsInner struct for KafkaRequestListAllOfItemsInner
type KafkaRequestListAllOfItemsInner struct {
	Id string `json:"id"`
	Kind string `json:"kind"`
	Href string `json:"href"`
	// Values: [accepted, preparing, provisioning, ready, failed, deprovision, deleting, suspending, suspended, resuming] 
	Status *string `json:"status,omitempty"`
	// Name of Cloud used to deploy. For example AWS
	CloudProvider *string `json:"cloud_provider,omitempty"`
	MultiAz bool `json:"multi_az"`
	// Values will be regions of specific cloud provider. For example: us-east-1 for AWS
	Region *string `json:"region,omitempty"`
	Owner *string `json:"owner,omitempty"`
	Name *string `json:"name,omitempty"`
	BootstrapServerHost *string `json:"bootstrap_server_host,omitempty"`
	// The kafka admin server url to perform kafka admin operations e.g acl management etc. The value will be available when the Kafka has been fully provisioned i.e it reaches a 'ready' state
	AdminApiServerUrl *string `json:"admin_api_server_url,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	ExpiresAt NullableTime `json:"expires_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	FailedReason *string `json:"failed_reason,omitempty"`
	Version *string `json:"version,omitempty"`
	InstanceType *string `json:"instance_type,omitempty"`
	// This field is now deprecated, please use the /api/kafkas_mgmt/v1/instance_types/{cloud_provider}/{cloud_region} endpoint to retrieve the field instead.
	// Deprecated
	InstanceTypeName *string `json:"instance_type_name,omitempty"`
	ReauthenticationEnabled bool `json:"reauthentication_enabled"`
	MaxDataRetentionSize *SupportedKafkaSizeBytesValueItem `json:"max_data_retention_size,omitempty"`
	BrowserUrl *string `json:"browser_url,omitempty"`
	SizeId *string `json:"size_id,omitempty"`
	// This field is now deprecated, please use the /api/kafkas_mgmt/v1/instance_types/{cloud_provider}/{cloud_region} endpoint to retrieve the field instead.
	// Deprecated
	IngressThroughputPerSec *string `json:"ingress_throughput_per_sec,omitempty"`
	// This field is now deprecated, please use the /api/kafkas_mgmt/v1/instance_types/{cloud_provider}/{cloud_region} endpoint to retrieve the field instead.
	// Deprecated
	EgressThroughputPerSec *string `json:"egress_throughput_per_sec,omitempty"`
	// This field is now deprecated, please use the /api/kafkas_mgmt/v1/instance_types/{cloud_provider}/{cloud_region} endpoint to retrieve the field instead.
	// Deprecated
	TotalMaxConnections *int32 `json:"total_max_connections,omitempty"`
	// This field is now deprecated, please use the /api/kafkas_mgmt/v1/instance_types/{cloud_provider}/{cloud_region} endpoint to retrieve the field instead.
	// Deprecated
	MaxPartitions *int32 `json:"max_partitions,omitempty"`
	// This field is now deprecated, please use the /api/kafkas_mgmt/v1/instance_types/{cloud_provider}/{cloud_region} endpoint to retrieve the field instead.
	// Deprecated
	MaxDataRetentionPeriod *string `json:"max_data_retention_period,omitempty"`
	// This field is now deprecated, please use the /api/kafkas_mgmt/v1/instance_types/{cloud_provider}/{cloud_region} endpoint to retrieve the field instead.
	// Deprecated
	MaxConnectionAttemptsPerSec *int32 `json:"max_connection_attempts_per_sec,omitempty"`
	BillingCloudAccountId *string `json:"billing_cloud_account_id,omitempty"`
	Marketplace *string `json:"marketplace,omitempty"`
	BillingModel *string `json:"billing_model,omitempty"`
	// Status of the Kafka request promotion. Possible values: ['promoting', 'failed']. If unset it means no promotion is in progress.
	PromotionStatus *string `json:"promotion_status,omitempty"`
	// The ID of the data plane where Kafka is deployed on. This information is only returned for kafka whose billing model is enterprise
	ClusterId NullableString `json:"cluster_id,omitempty"`
	// Details of the Kafka request promotion. It can be set when a Kafka request promotion is in progress or has failed
	PromotionDetails *string `json:"promotion_details,omitempty"`
}

// NewKafkaRequestListAllOfItemsInner instantiates a new KafkaRequestListAllOfItemsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKafkaRequestListAllOfItemsInner(id string, kind string, href string, multiAz bool, reauthenticationEnabled bool) *KafkaRequestListAllOfItemsInner {
	this := KafkaRequestListAllOfItemsInner{}
	this.Id = id
	this.Kind = kind
	this.Href = href
	this.MultiAz = multiAz
	this.ReauthenticationEnabled = reauthenticationEnabled
	return &this
}

// NewKafkaRequestListAllOfItemsInnerWithDefaults instantiates a new KafkaRequestListAllOfItemsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKafkaRequestListAllOfItemsInnerWithDefaults() *KafkaRequestListAllOfItemsInner {
	this := KafkaRequestListAllOfItemsInner{}
	return &this
}

// GetId returns the Id field value
func (o *KafkaRequestListAllOfItemsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *KafkaRequestListAllOfItemsInner) SetId(v string) {
	o.Id = v
}

// GetKind returns the Kind field value
func (o *KafkaRequestListAllOfItemsInner) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *KafkaRequestListAllOfItemsInner) SetKind(v string) {
	o.Kind = v
}

// GetHref returns the Href field value
func (o *KafkaRequestListAllOfItemsInner) GetHref() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Href
}

// GetHrefOk returns a tuple with the Href field value
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetHrefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Href, true
}

// SetHref sets field value
func (o *KafkaRequestListAllOfItemsInner) SetHref(v string) {
	o.Href = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *KafkaRequestListAllOfItemsInner) SetStatus(v string) {
	o.Status = &v
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetCloudProvider() string {
	if o == nil || IsNil(o.CloudProvider) {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetCloudProviderOk() (*string, bool) {
	if o == nil || IsNil(o.CloudProvider) {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasCloudProvider() bool {
	if o != nil && !IsNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *KafkaRequestListAllOfItemsInner) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

// GetMultiAz returns the MultiAz field value
func (o *KafkaRequestListAllOfItemsInner) GetMultiAz() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.MultiAz
}

// GetMultiAzOk returns a tuple with the MultiAz field value
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetMultiAzOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MultiAz, true
}

// SetMultiAz sets field value
func (o *KafkaRequestListAllOfItemsInner) SetMultiAz(v bool) {
	o.MultiAz = v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *KafkaRequestListAllOfItemsInner) SetRegion(v string) {
	o.Region = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *KafkaRequestListAllOfItemsInner) SetOwner(v string) {
	o.Owner = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KafkaRequestListAllOfItemsInner) SetName(v string) {
	o.Name = &v
}

// GetBootstrapServerHost returns the BootstrapServerHost field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetBootstrapServerHost() string {
	if o == nil || IsNil(o.BootstrapServerHost) {
		var ret string
		return ret
	}
	return *o.BootstrapServerHost
}

// GetBootstrapServerHostOk returns a tuple with the BootstrapServerHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetBootstrapServerHostOk() (*string, bool) {
	if o == nil || IsNil(o.BootstrapServerHost) {
		return nil, false
	}
	return o.BootstrapServerHost, true
}

// HasBootstrapServerHost returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasBootstrapServerHost() bool {
	if o != nil && !IsNil(o.BootstrapServerHost) {
		return true
	}

	return false
}

// SetBootstrapServerHost gets a reference to the given string and assigns it to the BootstrapServerHost field.
func (o *KafkaRequestListAllOfItemsInner) SetBootstrapServerHost(v string) {
	o.BootstrapServerHost = &v
}

// GetAdminApiServerUrl returns the AdminApiServerUrl field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetAdminApiServerUrl() string {
	if o == nil || IsNil(o.AdminApiServerUrl) {
		var ret string
		return ret
	}
	return *o.AdminApiServerUrl
}

// GetAdminApiServerUrlOk returns a tuple with the AdminApiServerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetAdminApiServerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AdminApiServerUrl) {
		return nil, false
	}
	return o.AdminApiServerUrl, true
}

// HasAdminApiServerUrl returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasAdminApiServerUrl() bool {
	if o != nil && !IsNil(o.AdminApiServerUrl) {
		return true
	}

	return false
}

// SetAdminApiServerUrl gets a reference to the given string and assigns it to the AdminApiServerUrl field.
func (o *KafkaRequestListAllOfItemsInner) SetAdminApiServerUrl(v string) {
	o.AdminApiServerUrl = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *KafkaRequestListAllOfItemsInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KafkaRequestListAllOfItemsInner) GetExpiresAt() time.Time {
	if o == nil || IsNil(o.ExpiresAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt.Get()
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KafkaRequestListAllOfItemsInner) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresAt.Get(), o.ExpiresAt.IsSet()
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasExpiresAt() bool {
	if o != nil && o.ExpiresAt.IsSet() {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given NullableTime and assigns it to the ExpiresAt field.
func (o *KafkaRequestListAllOfItemsInner) SetExpiresAt(v time.Time) {
	o.ExpiresAt.Set(&v)
}
// SetExpiresAtNil sets the value for ExpiresAt to be an explicit nil
func (o *KafkaRequestListAllOfItemsInner) SetExpiresAtNil() {
	o.ExpiresAt.Set(nil)
}

// UnsetExpiresAt ensures that no value is present for ExpiresAt, not even an explicit nil
func (o *KafkaRequestListAllOfItemsInner) UnsetExpiresAt() {
	o.ExpiresAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *KafkaRequestListAllOfItemsInner) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetFailedReason returns the FailedReason field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetFailedReason() string {
	if o == nil || IsNil(o.FailedReason) {
		var ret string
		return ret
	}
	return *o.FailedReason
}

// GetFailedReasonOk returns a tuple with the FailedReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetFailedReasonOk() (*string, bool) {
	if o == nil || IsNil(o.FailedReason) {
		return nil, false
	}
	return o.FailedReason, true
}

// HasFailedReason returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasFailedReason() bool {
	if o != nil && !IsNil(o.FailedReason) {
		return true
	}

	return false
}

// SetFailedReason gets a reference to the given string and assigns it to the FailedReason field.
func (o *KafkaRequestListAllOfItemsInner) SetFailedReason(v string) {
	o.FailedReason = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *KafkaRequestListAllOfItemsInner) SetVersion(v string) {
	o.Version = &v
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetInstanceType() string {
	if o == nil || IsNil(o.InstanceType) {
		var ret string
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetInstanceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceType) {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasInstanceType() bool {
	if o != nil && !IsNil(o.InstanceType) {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given string and assigns it to the InstanceType field.
func (o *KafkaRequestListAllOfItemsInner) SetInstanceType(v string) {
	o.InstanceType = &v
}

// GetInstanceTypeName returns the InstanceTypeName field value if set, zero value otherwise.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) GetInstanceTypeName() string {
	if o == nil || IsNil(o.InstanceTypeName) {
		var ret string
		return ret
	}
	return *o.InstanceTypeName
}

// GetInstanceTypeNameOk returns a tuple with the InstanceTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) GetInstanceTypeNameOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceTypeName) {
		return nil, false
	}
	return o.InstanceTypeName, true
}

// HasInstanceTypeName returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasInstanceTypeName() bool {
	if o != nil && !IsNil(o.InstanceTypeName) {
		return true
	}

	return false
}

// SetInstanceTypeName gets a reference to the given string and assigns it to the InstanceTypeName field.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) SetInstanceTypeName(v string) {
	o.InstanceTypeName = &v
}

// GetReauthenticationEnabled returns the ReauthenticationEnabled field value
func (o *KafkaRequestListAllOfItemsInner) GetReauthenticationEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ReauthenticationEnabled
}

// GetReauthenticationEnabledOk returns a tuple with the ReauthenticationEnabled field value
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetReauthenticationEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReauthenticationEnabled, true
}

// SetReauthenticationEnabled sets field value
func (o *KafkaRequestListAllOfItemsInner) SetReauthenticationEnabled(v bool) {
	o.ReauthenticationEnabled = v
}

// GetMaxDataRetentionSize returns the MaxDataRetentionSize field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetMaxDataRetentionSize() SupportedKafkaSizeBytesValueItem {
	if o == nil || IsNil(o.MaxDataRetentionSize) {
		var ret SupportedKafkaSizeBytesValueItem
		return ret
	}
	return *o.MaxDataRetentionSize
}

// GetMaxDataRetentionSizeOk returns a tuple with the MaxDataRetentionSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetMaxDataRetentionSizeOk() (*SupportedKafkaSizeBytesValueItem, bool) {
	if o == nil || IsNil(o.MaxDataRetentionSize) {
		return nil, false
	}
	return o.MaxDataRetentionSize, true
}

// HasMaxDataRetentionSize returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasMaxDataRetentionSize() bool {
	if o != nil && !IsNil(o.MaxDataRetentionSize) {
		return true
	}

	return false
}

// SetMaxDataRetentionSize gets a reference to the given SupportedKafkaSizeBytesValueItem and assigns it to the MaxDataRetentionSize field.
func (o *KafkaRequestListAllOfItemsInner) SetMaxDataRetentionSize(v SupportedKafkaSizeBytesValueItem) {
	o.MaxDataRetentionSize = &v
}

// GetBrowserUrl returns the BrowserUrl field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetBrowserUrl() string {
	if o == nil || IsNil(o.BrowserUrl) {
		var ret string
		return ret
	}
	return *o.BrowserUrl
}

// GetBrowserUrlOk returns a tuple with the BrowserUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetBrowserUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BrowserUrl) {
		return nil, false
	}
	return o.BrowserUrl, true
}

// HasBrowserUrl returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasBrowserUrl() bool {
	if o != nil && !IsNil(o.BrowserUrl) {
		return true
	}

	return false
}

// SetBrowserUrl gets a reference to the given string and assigns it to the BrowserUrl field.
func (o *KafkaRequestListAllOfItemsInner) SetBrowserUrl(v string) {
	o.BrowserUrl = &v
}

// GetSizeId returns the SizeId field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetSizeId() string {
	if o == nil || IsNil(o.SizeId) {
		var ret string
		return ret
	}
	return *o.SizeId
}

// GetSizeIdOk returns a tuple with the SizeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetSizeIdOk() (*string, bool) {
	if o == nil || IsNil(o.SizeId) {
		return nil, false
	}
	return o.SizeId, true
}

// HasSizeId returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasSizeId() bool {
	if o != nil && !IsNil(o.SizeId) {
		return true
	}

	return false
}

// SetSizeId gets a reference to the given string and assigns it to the SizeId field.
func (o *KafkaRequestListAllOfItemsInner) SetSizeId(v string) {
	o.SizeId = &v
}

// GetIngressThroughputPerSec returns the IngressThroughputPerSec field value if set, zero value otherwise.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) GetIngressThroughputPerSec() string {
	if o == nil || IsNil(o.IngressThroughputPerSec) {
		var ret string
		return ret
	}
	return *o.IngressThroughputPerSec
}

// GetIngressThroughputPerSecOk returns a tuple with the IngressThroughputPerSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) GetIngressThroughputPerSecOk() (*string, bool) {
	if o == nil || IsNil(o.IngressThroughputPerSec) {
		return nil, false
	}
	return o.IngressThroughputPerSec, true
}

// HasIngressThroughputPerSec returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasIngressThroughputPerSec() bool {
	if o != nil && !IsNil(o.IngressThroughputPerSec) {
		return true
	}

	return false
}

// SetIngressThroughputPerSec gets a reference to the given string and assigns it to the IngressThroughputPerSec field.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) SetIngressThroughputPerSec(v string) {
	o.IngressThroughputPerSec = &v
}

// GetEgressThroughputPerSec returns the EgressThroughputPerSec field value if set, zero value otherwise.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) GetEgressThroughputPerSec() string {
	if o == nil || IsNil(o.EgressThroughputPerSec) {
		var ret string
		return ret
	}
	return *o.EgressThroughputPerSec
}

// GetEgressThroughputPerSecOk returns a tuple with the EgressThroughputPerSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) GetEgressThroughputPerSecOk() (*string, bool) {
	if o == nil || IsNil(o.EgressThroughputPerSec) {
		return nil, false
	}
	return o.EgressThroughputPerSec, true
}

// HasEgressThroughputPerSec returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasEgressThroughputPerSec() bool {
	if o != nil && !IsNil(o.EgressThroughputPerSec) {
		return true
	}

	return false
}

// SetEgressThroughputPerSec gets a reference to the given string and assigns it to the EgressThroughputPerSec field.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) SetEgressThroughputPerSec(v string) {
	o.EgressThroughputPerSec = &v
}

// GetTotalMaxConnections returns the TotalMaxConnections field value if set, zero value otherwise.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) GetTotalMaxConnections() int32 {
	if o == nil || IsNil(o.TotalMaxConnections) {
		var ret int32
		return ret
	}
	return *o.TotalMaxConnections
}

// GetTotalMaxConnectionsOk returns a tuple with the TotalMaxConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) GetTotalMaxConnectionsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalMaxConnections) {
		return nil, false
	}
	return o.TotalMaxConnections, true
}

// HasTotalMaxConnections returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasTotalMaxConnections() bool {
	if o != nil && !IsNil(o.TotalMaxConnections) {
		return true
	}

	return false
}

// SetTotalMaxConnections gets a reference to the given int32 and assigns it to the TotalMaxConnections field.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) SetTotalMaxConnections(v int32) {
	o.TotalMaxConnections = &v
}

// GetMaxPartitions returns the MaxPartitions field value if set, zero value otherwise.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) GetMaxPartitions() int32 {
	if o == nil || IsNil(o.MaxPartitions) {
		var ret int32
		return ret
	}
	return *o.MaxPartitions
}

// GetMaxPartitionsOk returns a tuple with the MaxPartitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) GetMaxPartitionsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxPartitions) {
		return nil, false
	}
	return o.MaxPartitions, true
}

// HasMaxPartitions returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasMaxPartitions() bool {
	if o != nil && !IsNil(o.MaxPartitions) {
		return true
	}

	return false
}

// SetMaxPartitions gets a reference to the given int32 and assigns it to the MaxPartitions field.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) SetMaxPartitions(v int32) {
	o.MaxPartitions = &v
}

// GetMaxDataRetentionPeriod returns the MaxDataRetentionPeriod field value if set, zero value otherwise.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) GetMaxDataRetentionPeriod() string {
	if o == nil || IsNil(o.MaxDataRetentionPeriod) {
		var ret string
		return ret
	}
	return *o.MaxDataRetentionPeriod
}

// GetMaxDataRetentionPeriodOk returns a tuple with the MaxDataRetentionPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) GetMaxDataRetentionPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.MaxDataRetentionPeriod) {
		return nil, false
	}
	return o.MaxDataRetentionPeriod, true
}

// HasMaxDataRetentionPeriod returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasMaxDataRetentionPeriod() bool {
	if o != nil && !IsNil(o.MaxDataRetentionPeriod) {
		return true
	}

	return false
}

// SetMaxDataRetentionPeriod gets a reference to the given string and assigns it to the MaxDataRetentionPeriod field.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) SetMaxDataRetentionPeriod(v string) {
	o.MaxDataRetentionPeriod = &v
}

// GetMaxConnectionAttemptsPerSec returns the MaxConnectionAttemptsPerSec field value if set, zero value otherwise.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) GetMaxConnectionAttemptsPerSec() int32 {
	if o == nil || IsNil(o.MaxConnectionAttemptsPerSec) {
		var ret int32
		return ret
	}
	return *o.MaxConnectionAttemptsPerSec
}

// GetMaxConnectionAttemptsPerSecOk returns a tuple with the MaxConnectionAttemptsPerSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) GetMaxConnectionAttemptsPerSecOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxConnectionAttemptsPerSec) {
		return nil, false
	}
	return o.MaxConnectionAttemptsPerSec, true
}

// HasMaxConnectionAttemptsPerSec returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasMaxConnectionAttemptsPerSec() bool {
	if o != nil && !IsNil(o.MaxConnectionAttemptsPerSec) {
		return true
	}

	return false
}

// SetMaxConnectionAttemptsPerSec gets a reference to the given int32 and assigns it to the MaxConnectionAttemptsPerSec field.
// Deprecated
func (o *KafkaRequestListAllOfItemsInner) SetMaxConnectionAttemptsPerSec(v int32) {
	o.MaxConnectionAttemptsPerSec = &v
}

// GetBillingCloudAccountId returns the BillingCloudAccountId field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetBillingCloudAccountId() string {
	if o == nil || IsNil(o.BillingCloudAccountId) {
		var ret string
		return ret
	}
	return *o.BillingCloudAccountId
}

// GetBillingCloudAccountIdOk returns a tuple with the BillingCloudAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetBillingCloudAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.BillingCloudAccountId) {
		return nil, false
	}
	return o.BillingCloudAccountId, true
}

// HasBillingCloudAccountId returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasBillingCloudAccountId() bool {
	if o != nil && !IsNil(o.BillingCloudAccountId) {
		return true
	}

	return false
}

// SetBillingCloudAccountId gets a reference to the given string and assigns it to the BillingCloudAccountId field.
func (o *KafkaRequestListAllOfItemsInner) SetBillingCloudAccountId(v string) {
	o.BillingCloudAccountId = &v
}

// GetMarketplace returns the Marketplace field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetMarketplace() string {
	if o == nil || IsNil(o.Marketplace) {
		var ret string
		return ret
	}
	return *o.Marketplace
}

// GetMarketplaceOk returns a tuple with the Marketplace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetMarketplaceOk() (*string, bool) {
	if o == nil || IsNil(o.Marketplace) {
		return nil, false
	}
	return o.Marketplace, true
}

// HasMarketplace returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasMarketplace() bool {
	if o != nil && !IsNil(o.Marketplace) {
		return true
	}

	return false
}

// SetMarketplace gets a reference to the given string and assigns it to the Marketplace field.
func (o *KafkaRequestListAllOfItemsInner) SetMarketplace(v string) {
	o.Marketplace = &v
}

// GetBillingModel returns the BillingModel field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetBillingModel() string {
	if o == nil || IsNil(o.BillingModel) {
		var ret string
		return ret
	}
	return *o.BillingModel
}

// GetBillingModelOk returns a tuple with the BillingModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetBillingModelOk() (*string, bool) {
	if o == nil || IsNil(o.BillingModel) {
		return nil, false
	}
	return o.BillingModel, true
}

// HasBillingModel returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasBillingModel() bool {
	if o != nil && !IsNil(o.BillingModel) {
		return true
	}

	return false
}

// SetBillingModel gets a reference to the given string and assigns it to the BillingModel field.
func (o *KafkaRequestListAllOfItemsInner) SetBillingModel(v string) {
	o.BillingModel = &v
}

// GetPromotionStatus returns the PromotionStatus field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetPromotionStatus() string {
	if o == nil || IsNil(o.PromotionStatus) {
		var ret string
		return ret
	}
	return *o.PromotionStatus
}

// GetPromotionStatusOk returns a tuple with the PromotionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetPromotionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionStatus) {
		return nil, false
	}
	return o.PromotionStatus, true
}

// HasPromotionStatus returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasPromotionStatus() bool {
	if o != nil && !IsNil(o.PromotionStatus) {
		return true
	}

	return false
}

// SetPromotionStatus gets a reference to the given string and assigns it to the PromotionStatus field.
func (o *KafkaRequestListAllOfItemsInner) SetPromotionStatus(v string) {
	o.PromotionStatus = &v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KafkaRequestListAllOfItemsInner) GetClusterId() string {
	if o == nil || IsNil(o.ClusterId.Get()) {
		var ret string
		return ret
	}
	return *o.ClusterId.Get()
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KafkaRequestListAllOfItemsInner) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterId.Get(), o.ClusterId.IsSet()
}

// HasClusterId returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasClusterId() bool {
	if o != nil && o.ClusterId.IsSet() {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given NullableString and assigns it to the ClusterId field.
func (o *KafkaRequestListAllOfItemsInner) SetClusterId(v string) {
	o.ClusterId.Set(&v)
}
// SetClusterIdNil sets the value for ClusterId to be an explicit nil
func (o *KafkaRequestListAllOfItemsInner) SetClusterIdNil() {
	o.ClusterId.Set(nil)
}

// UnsetClusterId ensures that no value is present for ClusterId, not even an explicit nil
func (o *KafkaRequestListAllOfItemsInner) UnsetClusterId() {
	o.ClusterId.Unset()
}

// GetPromotionDetails returns the PromotionDetails field value if set, zero value otherwise.
func (o *KafkaRequestListAllOfItemsInner) GetPromotionDetails() string {
	if o == nil || IsNil(o.PromotionDetails) {
		var ret string
		return ret
	}
	return *o.PromotionDetails
}

// GetPromotionDetailsOk returns a tuple with the PromotionDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRequestListAllOfItemsInner) GetPromotionDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionDetails) {
		return nil, false
	}
	return o.PromotionDetails, true
}

// HasPromotionDetails returns a boolean if a field has been set.
func (o *KafkaRequestListAllOfItemsInner) HasPromotionDetails() bool {
	if o != nil && !IsNil(o.PromotionDetails) {
		return true
	}

	return false
}

// SetPromotionDetails gets a reference to the given string and assigns it to the PromotionDetails field.
func (o *KafkaRequestListAllOfItemsInner) SetPromotionDetails(v string) {
	o.PromotionDetails = &v
}

func (o KafkaRequestListAllOfItemsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KafkaRequestListAllOfItemsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["kind"] = o.Kind
	toSerialize["href"] = o.Href
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CloudProvider) {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	toSerialize["multi_az"] = o.MultiAz
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.BootstrapServerHost) {
		toSerialize["bootstrap_server_host"] = o.BootstrapServerHost
	}
	if !IsNil(o.AdminApiServerUrl) {
		toSerialize["admin_api_server_url"] = o.AdminApiServerUrl
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.ExpiresAt.IsSet() {
		toSerialize["expires_at"] = o.ExpiresAt.Get()
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.FailedReason) {
		toSerialize["failed_reason"] = o.FailedReason
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.InstanceType) {
		toSerialize["instance_type"] = o.InstanceType
	}
	if !IsNil(o.InstanceTypeName) {
		toSerialize["instance_type_name"] = o.InstanceTypeName
	}
	toSerialize["reauthentication_enabled"] = o.ReauthenticationEnabled
	if !IsNil(o.MaxDataRetentionSize) {
		toSerialize["max_data_retention_size"] = o.MaxDataRetentionSize
	}
	if !IsNil(o.BrowserUrl) {
		toSerialize["browser_url"] = o.BrowserUrl
	}
	if !IsNil(o.SizeId) {
		toSerialize["size_id"] = o.SizeId
	}
	if !IsNil(o.IngressThroughputPerSec) {
		toSerialize["ingress_throughput_per_sec"] = o.IngressThroughputPerSec
	}
	if !IsNil(o.EgressThroughputPerSec) {
		toSerialize["egress_throughput_per_sec"] = o.EgressThroughputPerSec
	}
	if !IsNil(o.TotalMaxConnections) {
		toSerialize["total_max_connections"] = o.TotalMaxConnections
	}
	if !IsNil(o.MaxPartitions) {
		toSerialize["max_partitions"] = o.MaxPartitions
	}
	if !IsNil(o.MaxDataRetentionPeriod) {
		toSerialize["max_data_retention_period"] = o.MaxDataRetentionPeriod
	}
	if !IsNil(o.MaxConnectionAttemptsPerSec) {
		toSerialize["max_connection_attempts_per_sec"] = o.MaxConnectionAttemptsPerSec
	}
	if !IsNil(o.BillingCloudAccountId) {
		toSerialize["billing_cloud_account_id"] = o.BillingCloudAccountId
	}
	if !IsNil(o.Marketplace) {
		toSerialize["marketplace"] = o.Marketplace
	}
	if !IsNil(o.BillingModel) {
		toSerialize["billing_model"] = o.BillingModel
	}
	if !IsNil(o.PromotionStatus) {
		toSerialize["promotion_status"] = o.PromotionStatus
	}
	if o.ClusterId.IsSet() {
		toSerialize["cluster_id"] = o.ClusterId.Get()
	}
	if !IsNil(o.PromotionDetails) {
		toSerialize["promotion_details"] = o.PromotionDetails
	}
	return toSerialize, nil
}

type NullableKafkaRequestListAllOfItemsInner struct {
	value *KafkaRequestListAllOfItemsInner
	isSet bool
}

func (v NullableKafkaRequestListAllOfItemsInner) Get() *KafkaRequestListAllOfItemsInner {
	return v.value
}

func (v *NullableKafkaRequestListAllOfItemsInner) Set(val *KafkaRequestListAllOfItemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableKafkaRequestListAllOfItemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableKafkaRequestListAllOfItemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKafkaRequestListAllOfItemsInner(val *KafkaRequestListAllOfItemsInner) *NullableKafkaRequestListAllOfItemsInner {
	return &NullableKafkaRequestListAllOfItemsInner{value: val, isSet: true}
}

func (v NullableKafkaRequestListAllOfItemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKafkaRequestListAllOfItemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


