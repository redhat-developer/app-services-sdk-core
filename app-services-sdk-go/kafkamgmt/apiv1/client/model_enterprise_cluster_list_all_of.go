/*
Kafka Management API

Kafka Management API is a REST API to manage Kafka instances

API version: 1.16.0
Contact: rhosak-support@redhat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kafkamgmtclient

import (
	"encoding/json"
)

// checks if the EnterpriseClusterListAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnterpriseClusterListAllOf{}

// EnterpriseClusterListAllOf struct for EnterpriseClusterListAllOf
type EnterpriseClusterListAllOf struct {
	Items []EnterpriseClusterListAllOfItemsInner `json:"items"`
}

// NewEnterpriseClusterListAllOf instantiates a new EnterpriseClusterListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnterpriseClusterListAllOf(items []EnterpriseClusterListAllOfItemsInner) *EnterpriseClusterListAllOf {
	this := EnterpriseClusterListAllOf{}
	this.Items = items
	return &this
}

// NewEnterpriseClusterListAllOfWithDefaults instantiates a new EnterpriseClusterListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnterpriseClusterListAllOfWithDefaults() *EnterpriseClusterListAllOf {
	this := EnterpriseClusterListAllOf{}
	return &this
}

// GetItems returns the Items field value
func (o *EnterpriseClusterListAllOf) GetItems() []EnterpriseClusterListAllOfItemsInner {
	if o == nil {
		var ret []EnterpriseClusterListAllOfItemsInner
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *EnterpriseClusterListAllOf) GetItemsOk() ([]EnterpriseClusterListAllOfItemsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *EnterpriseClusterListAllOf) SetItems(v []EnterpriseClusterListAllOfItemsInner) {
	o.Items = v
}

func (o EnterpriseClusterListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnterpriseClusterListAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	return toSerialize, nil
}

type NullableEnterpriseClusterListAllOf struct {
	value *EnterpriseClusterListAllOf
	isSet bool
}

func (v NullableEnterpriseClusterListAllOf) Get() *EnterpriseClusterListAllOf {
	return v.value
}

func (v *NullableEnterpriseClusterListAllOf) Set(val *EnterpriseClusterListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEnterpriseClusterListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEnterpriseClusterListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnterpriseClusterListAllOf(val *EnterpriseClusterListAllOf) *NullableEnterpriseClusterListAllOf {
	return &NullableEnterpriseClusterListAllOf{value: val, isSet: true}
}

func (v NullableEnterpriseClusterListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnterpriseClusterListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


