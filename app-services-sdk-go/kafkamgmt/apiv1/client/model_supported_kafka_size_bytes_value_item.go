/*
Kafka Management API

Kafka Management API is a REST API to manage Kafka instances

API version: 1.15.0
Contact: rhosak-support@redhat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kafkamgmtclient

import (
	"encoding/json"
)

// checks if the SupportedKafkaSizeBytesValueItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupportedKafkaSizeBytesValueItem{}

// SupportedKafkaSizeBytesValueItem struct for SupportedKafkaSizeBytesValueItem
type SupportedKafkaSizeBytesValueItem struct {
	Bytes *int64 `json:"bytes,omitempty"`
}

// NewSupportedKafkaSizeBytesValueItem instantiates a new SupportedKafkaSizeBytesValueItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupportedKafkaSizeBytesValueItem() *SupportedKafkaSizeBytesValueItem {
	this := SupportedKafkaSizeBytesValueItem{}
	return &this
}

// NewSupportedKafkaSizeBytesValueItemWithDefaults instantiates a new SupportedKafkaSizeBytesValueItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupportedKafkaSizeBytesValueItemWithDefaults() *SupportedKafkaSizeBytesValueItem {
	this := SupportedKafkaSizeBytesValueItem{}
	return &this
}

// GetBytes returns the Bytes field value if set, zero value otherwise.
func (o *SupportedKafkaSizeBytesValueItem) GetBytes() int64 {
	if o == nil || IsNil(o.Bytes) {
		var ret int64
		return ret
	}
	return *o.Bytes
}

// GetBytesOk returns a tuple with the Bytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportedKafkaSizeBytesValueItem) GetBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.Bytes) {
		return nil, false
	}
	return o.Bytes, true
}

// HasBytes returns a boolean if a field has been set.
func (o *SupportedKafkaSizeBytesValueItem) HasBytes() bool {
	if o != nil && !IsNil(o.Bytes) {
		return true
	}

	return false
}

// SetBytes gets a reference to the given int64 and assigns it to the Bytes field.
func (o *SupportedKafkaSizeBytesValueItem) SetBytes(v int64) {
	o.Bytes = &v
}

func (o SupportedKafkaSizeBytesValueItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupportedKafkaSizeBytesValueItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bytes) {
		toSerialize["bytes"] = o.Bytes
	}
	return toSerialize, nil
}

type NullableSupportedKafkaSizeBytesValueItem struct {
	value *SupportedKafkaSizeBytesValueItem
	isSet bool
}

func (v NullableSupportedKafkaSizeBytesValueItem) Get() *SupportedKafkaSizeBytesValueItem {
	return v.value
}

func (v *NullableSupportedKafkaSizeBytesValueItem) Set(val *SupportedKafkaSizeBytesValueItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSupportedKafkaSizeBytesValueItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSupportedKafkaSizeBytesValueItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupportedKafkaSizeBytesValueItem(val *SupportedKafkaSizeBytesValueItem) *NullableSupportedKafkaSizeBytesValueItem {
	return &NullableSupportedKafkaSizeBytesValueItem{value: val, isSet: true}
}

func (v NullableSupportedKafkaSizeBytesValueItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupportedKafkaSizeBytesValueItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


